{"version":3,"file":"index.cjs.js","sources":["../node_modules/typescript-44ms/src/api/use-service.ts","../node_modules/typescript-44ms/src/api/yieldable-port.ts","../node_modules/typescript-44ms/src/api/ref-primitive.ts","../node_modules/typescript-44ms/src/api/yieldable-handler.ts","../node_modules/typescript-44ms/src/api/yielded-value.ts","../node_modules/typescript-44ms/src/api/extract-yielding-ref.ts","../node_modules/typescript-44ms/src/api/submit.ts","../node_modules/typescript-44ms/src/api/typed-ref.ts","../node_modules/typescript-44ms/src/always/dependencies-vs-dependencies.ts","../node_modules/typescript-44ms-reactionary-template-method/src/public-form-state-stack.ts","../node_modules/typescript-44ms-reactionary-template-method/src/public-form.ts","../node_modules/typescript-44ms-reactionary-template-method/src/use-reacting-power.ts","../node_modules/typescript-44ms-reactionary-template-method/src/use-submit.ts","../node_modules/typescript-44ms-reactionary-template-method/src/work.ts","../node_modules/typescript-44ms-ootb-create-element/ootb-create-element.ts","../node_modules/typescript-44ms-ootb-dom/ootb-dom.ts","../node_modules/typescript-44ms-ootb-events/src/ootb-events.ts","../node_modules/typescript-44ms-ootb-form-refs/ootb-form-refs.ts","../node_modules/typescript-44ms-ootb-logical-context/ootb-logical-context.ts","../node_modules/typescript-44ms-ootb-public-form-state/ootb-public-form-state.ts","../node_modules/typescript-44ms-ootb-reactionary/use-state.ts","../node_modules/typescript-44ms-ootb-reactionary/use-memo.ts","../node_modules/typescript-44ms-ootb-reactionary/use-effect.ts","../node_modules/typescript-44ms-ootb-reactionary/use-callback.ts","../node_modules/typescript-44ms-ootb-reactionary/use-ref.ts","../node_modules/typescript-44ms-ootb-service/ootb-service.ts","../node_modules/typescript-44ms-ootb-reactionary/use-form-refs.ts","../node_modules/typescript-44ms-ootb-reactionary/yield.ts","../node_modules/typescript-44ms-ootb-service-controller/ootb-service-controller.ts","../node_modules/typescript-44ms-ootb-source-of-truth/ootb-source-of-truth.ts","../node_modules/typescript-44ms-ootb-state-indexing/ootb-state-indexing.ts","../src/ootb.ts"],"sourcesContent":["import { Service } from \"./service\";\n\nconst UseServiceSymbol = Symbol.for(\"react-44ms/api/UseServiceSymbol\");\n\ndeclare global {\n  interface Window {\n    [UseServiceSymbol]: Service;\n  }\n}\n\nexport const useService = () => {\n  return window[UseServiceSymbol];\n};\n\nexport const setYourService = (yourService: Service) => {\n  window[UseServiceSymbol] = yourService;\n};\n","export const YieldablePortSymbol = Symbol.for(\n  \"react-44ms/api/YieldablePortSymbol\"\n);\nexport const YieldablePort = (inputName: string) => {\n  const yieldablePortPrimitive: YieldablePortPrimitive = {\n    [YieldablePortSymbol]: inputName,\n    _yieldablePort: YieldablePortSymbol,\n  };\n  return yieldablePortPrimitive;\n};\n\nexport interface YieldablePortPrimitive {\n  [YieldablePortSymbol]: string;\n  _yieldablePort: typeof YieldablePortSymbol;\n}\n\nexport const isThatAYieldablePort = (\n  input?: any\n): input is YieldablePortPrimitive => {\n  return input?._yieldablePort === YieldablePortSymbol;\n};\n","export const RefSymbol = Symbol.for(\"react-44ms/api/RefSymbol\");\n\nexport interface RefPrimitive {\n  [RefSymbol]: string;\n  _refSymbol: typeof RefSymbol;\n}\n\nexport const isThatARef = (that: any): that is RefPrimitive => {\n  return !!that && that._refSymbol === RefSymbol;\n};\n\nexport const anyRefishToStringValue = (refish?: any): string => {\n  if (isThatARef(refish)) {\n    return refish[RefSymbol];\n  }\n  return refish || \"\";\n};\n","export const YieldableHandler = (eventHandlerExplicitNameOnJsx: string) => {\n  const yieldableHandler: YieldableHandlerPrimitive = {\n    [YieldableHandlerSymbol]: eventHandlerExplicitNameOnJsx,\n    _yieldableHandler: YieldableHandlerSymbol,\n  };\n  return yieldableHandler;\n};\nexport const YieldableHandlerSymbol = Symbol.for(\n  \"react-44ms/api/YieldableHandlerSymbol\"\n);\n\nexport interface YieldableHandlerPrimitive {\n  [YieldableHandlerSymbol]: string;\n  _yieldableHandler: typeof YieldableHandlerSymbol;\n}\n\nexport const isThatAYieldableHandler = (\n  input?: any\n): input is YieldableHandlerPrimitive => {\n  return input?._yieldableHandler === YieldableHandlerSymbol;\n};\n\nexport const anyYieldableHandlerToValue = (refish?: any): string => {\n  if (isThatAYieldableHandler(refish)) {\n    return refish[YieldableHandlerSymbol];\n  }\n  return \"\";\n};","export const YieldedValueSymbol = Symbol.for(\n  \"react-44ms/api/YieldedValueSymbol\"\n);\nexport const YieldedValueNotFoundSymbol = Symbol.for(\n  \"react-44ms/api/YieldedValueNotFoundSymbol\"\n);\n\nexport interface YieldedValuePrimitive {\n  [YieldedValueSymbol]: any;\n  _yieldedValueSymbol: typeof YieldedValueSymbol;\n}\n\nexport const isThatAYieldedValuePrimitive = (\n  that: any\n): that is YieldedValuePrimitive => {\n  return !!that && that._yieldedValueSymbol === YieldedValueSymbol;\n};\n\nexport const extractYieldedValue = (refish?: any) => {\n  if (isThatAYieldedValuePrimitive(refish)) {\n    return refish[YieldedValueSymbol];\n  }\n  return YieldedValueNotFoundSymbol;\n};\n\nexport const YieldAValueAtTheEnd = (value: any): YieldedValuePrimitive => {\n  return {\n    [YieldedValueSymbol]: value,\n    _yieldedValueSymbol: YieldedValueSymbol,\n  };\n};\n","import { ref } from \"./ref\";\nimport { isThatARef } from \"./ref-primitive\";\nimport {\n  isThatAYieldableHandler,\n  YieldableHandlerPrimitive,\n} from \"./yieldable-handler\";\nimport { isThatAYieldablePort, YieldablePortPrimitive } from \"./yieldable-port\";\nimport {\n  extractYieldedValue,\n  isThatAYieldedValuePrimitive,\n  YieldedValueNotFoundSymbol,\n  YieldedValuePrimitive,\n} from \"./yielded-value\";\nimport { YieldingRef } from \"./yielding-ref\";\n\nexport const extractYieldingRef = (\n  refThatCanHaveYielding:\n    | ref\n    | YieldableHandlerPrimitive\n    | (\n        | ref\n        | YieldablePortPrimitive\n        | YieldableHandlerPrimitive\n        | YieldedValuePrimitive\n      )[]\n    | undefined\n) => {\n  let yieldingCallstackAdditions: ref[] = [];\n  let yieldablePort: YieldablePortPrimitive | undefined = undefined;\n  let yieldableHandler: YieldableHandlerPrimitive | undefined = undefined;\n  let yieldedValue: any | undefined = YieldedValueNotFoundSymbol;\n  if (Array.isArray(refThatCanHaveYielding)) {\n    type NoLongerAnyYieldableHandlerPrimitive = ref[];\n    refThatCanHaveYielding = refThatCanHaveYielding.filter((refComponent) => {\n      if (isThatAYieldableHandler(refComponent)) {\n        yieldableHandler = refComponent;\n        return false;\n      }\n      return true;\n    }) as NoLongerAnyYieldableHandlerPrimitive;\n\n    refThatCanHaveYielding = (\n      refThatCanHaveYielding as NoLongerAnyYieldableHandlerPrimitive\n    ).filter((refComponent: ref) => {\n      if (isThatAYieldablePort(refComponent)) {\n        yieldablePort = refComponent;\n        return false;\n      }\n      return true;\n    });\n\n    refThatCanHaveYielding = (\n      refThatCanHaveYielding as NoLongerAnyYieldableHandlerPrimitive\n    ).filter((refComponent: ref) => {\n      if (isThatAYieldedValuePrimitive(refComponent)) {\n        yieldedValue = extractYieldedValue(refComponent);\n        return false;\n      }\n      return true;\n    });\n\n    const lastValueInTheRef =\n      refThatCanHaveYielding[refThatCanHaveYielding.length - 1];\n    if (!isThatARef(lastValueInTheRef)) {\n      yieldedValue = lastValueInTheRef;\n      refThatCanHaveYielding = refThatCanHaveYielding.slice(\n        0,\n        refThatCanHaveYielding.length - 1\n      );\n    }\n\n    yieldingCallstackAdditions =\n      refThatCanHaveYielding as NoLongerAnyYieldableHandlerPrimitive;\n  } else if (refThatCanHaveYielding) {\n    yieldingCallstackAdditions = [refThatCanHaveYielding as ref];\n  }\n\n  const yieldingRef: YieldingRef = {\n    yieldingCallstackAdditions,\n    yieldablePort,\n    yieldableHandler,\n    yieldedValue,\n  };\n\n  return yieldingRef;\n};\n","import { useService } from \"./use-service\";\n\nexport const submit = (submission: true) => {\n  const { useSubmit } = useService();\n  const submitter = useSubmit();\n  return submitter.submit(submission);\n};\n\nsubmit.NO_SUBMIT_FOUND_INVALID_FORM_REASON_KEY = Symbol.for(\n  \"React44ms/FORM_SUBMIT_INVALID_NO_SUBMIT_KEY\"\n);\n","import { RefPrimitive } from \"./ref-primitive\";\n\nexport const TypedRefSymbol = Symbol.for(\"react-44ms/api/TypedRefSymbol\");\nexport const TypedRefValueSymbol = Symbol.for(\n  \"react-44ms/api/TypedRefValueSymbol\"\n);\n\nexport interface TypedRef<YourExpectedTypeThatLivesAtTheRefdLocation>\n  extends RefPrimitive {\n  [TypedRefSymbol]: RefPrimitive;\n  [TypedRefValueSymbol]: YourExpectedTypeThatLivesAtTheRefdLocation;\n  _typedRefSymbol: typeof TypedRefSymbol;\n}\n\nexport const isThatATypedRef = (that: any): that is TypedRef<any> => {\n  return !!that && that._typedRefSymbol === TypedRefSymbol;\n};\n","type AreTheDependenciesTheSame = boolean;\nexport const YesTheDependenciesAreTheSame: AreTheDependenciesTheSame = true;\nexport const NoTheDependenciesAreNotTheSame: AreTheDependenciesTheSame = false;\nexport const dependenciesVsDependencies = (\n  lhs: any[] | null | undefined,\n  rhs: any[] | null | undefined\n): AreTheDependenciesTheSame => {\n  if (!lhs && !rhs) {\n    return YesTheDependenciesAreTheSame;\n  }\n  if (!lhs && rhs) {\n    return NoTheDependenciesAreNotTheSame;\n  }\n  if (lhs && !rhs) {\n    return NoTheDependenciesAreNotTheSame;\n  }\n  if (lhs && rhs) {\n    if (lhs.length != rhs.length) {\n      return NoTheDependenciesAreNotTheSame;\n    }\n    const isAnyDependencyDifferentSinceLastTime = lhs.some((lhs, index) =>\n      !Object.is(lhs, rhs[index])\n    );\n    if (isAnyDependencyDifferentSinceLastTime) {\n      return NoTheDependenciesAreNotTheSame;\n    }\n  }\n  return YesTheDependenciesAreTheSame;\n};\n","import * as t44ms from \"typescript-44ms\";\n\nimport { PublicForm } from \"./public-form\";\n\nexport interface PublicFormStateStack {\n  publicFormStateImmediate: () => PublicForm | null;\n  siphonPublicFinal: (\n    virtualStack: t44ms.Api.ref[],\n    value: any,\n    name?: string | typeof PublicFormStateStack_CrushKillDestroy\n  ) => void;\n  siphonPublicFulfillmentFinal: (\n    virtualStack: t44ms.Api.ref[],\n    value: any,\n    name?: string | typeof PublicFormStateStack_CrushKillDestroy\n  ) => void;\n  publicFulfillmentImmediate: () => PublicForm | null;\n}\n\nexport const PublicFormStateStack_CrushKillDestroy = Symbol.for(\n  \"react-44ms/service/crush-kill-destroy\"\n);\n","import * as t44ms from \"typescript-44ms\";\n\nexport interface PublicForm {\n  [key: string | number | symbol]: any;\n}\n\nexport const publicFormAccess = <\n  YourFormStateDescribingInterfaceType extends any\n>(\n  publicFormState: PublicForm | null,\n  ref: t44ms.Api.ref\n): YourFormStateDescribingInterfaceType | null => {\n  const literalCallstack = ref[t44ms.Api.RefSymbol].split(\".\");\n  let node = publicFormState;\n  literalCallstack.forEach((name) => {\n    if (name && name.length > 0) {\n      node = node?.[name];\n    }\n  });\n  return node as YourFormStateDescribingInterfaceType | null;\n};\n","import { ReactingPower } from \"./reacting-power\";\n\nexport const React44msReactingPowerSymbol = Symbol.for(\n  \"react-44ms/service/reacting-power\"\n);\n\nexport const useReactingPower = () => {\n  return (window as any)[\n    React44msReactingPowerSymbol\n  ] as ReactingPower;\n};\n","import * as t44ms from \"typescript-44ms\";\n\nexport const React44msUseSubmitSymbol = Symbol.for(\n  \"react-44ms/service/use-submit\"\n);\n\nexport const useSubmit = () => {\n  return (window as any)[React44msUseSubmitSymbol] as t44ms.Api.Submitter;\n};\n","export type Work = () => void;\n\nexport enum WorkDescription {\n  state = \"state\",\n  after_rendering = \"after_rendering\",\n}\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const ootbCreateElement: Service.FactoryCreateElement = (\n  stateIndexingStack,\n  virtualDomController,\n  logicalContextController,\n  reactingPower,\n  sourceOfTruth,\n  iAmReact\n) => {\n  const { beginStateIndexesContext, endStateIndexesContext } =\n    stateIndexingStack;\n\n  const begin_context = (ref?: t44ms.Api.ref) => {\n    logicalContextController.begin_context(reactingPower.logicalContext, ref);\n\n    beginStateIndexesContext();\n\n    (window as any)[Service.React44msReactingPowerSymbol] = reactingPower;\n\n    virtualDomController.begin_context(ref);\n  };\n  const createElement: Service.ServiceClient[\"createElement\"] = <\n    YourPropsType extends any\n  >(\n    type: t44ms.Api.FunctionComponent<YourPropsType>,\n    props: YourPropsType,\n    ref?: Symbol\n  ) => {\n    begin_context(ref as unknown as t44ms.Api.ref);\n    virtualDomController.createElement<YourPropsType>(type, props);\n    const rendered = type({\n      ...(props as unknown as any),\n      ...{\n        ref: (ref as unknown as t44ms.Api.ref)[t44ms.Api.RefSymbol],\n      },\n    });\n    end_context(rendered);\n\n    const children: JSX.Element[] = !!rendered?.props?.children\n      ? Array.isArray(rendered.props.children)\n        ? rendered.props.children\n        : [rendered.props.children]\n      : [];\n\n    children.forEach((child: JSX.Element) => {\n      if (!child) {\n        return;\n      }\n      if (child.type instanceof Function) {\n        const childProps = child.props;\n        const childRef: string = (child as unknown as any).ref;\n        const childType = child.type;\n\n        const fullyQualifiedRef: t44ms.Api.RefPrimitive = {\n          [t44ms.Api.RefSymbol]: `${\n            (ref as unknown as t44ms.Api.ref)[t44ms.Api.RefSymbol]\n          }.${childRef}`,\n          _refSymbol: t44ms.Api.RefSymbol,\n        };\n\n        createElement(\n          childType,\n          childProps,\n          fullyQualifiedRef as unknown as Symbol\n        );\n      }\n    });\n\n    return rendered;\n  };\n  const end_context = (rendered: JSX.Element) => {\n    const virtualDomNode_fullyFormed =\n      virtualDomController.end_context(rendered);\n      \n    virtualDomNode_fullyFormed.lastExplicitChildren?.forEach(\n      (aPreviousExplicitChild) => {\n        const thisChildDoesntExistAnymore =\n          !virtualDomNode_fullyFormed.latestExplicitChildren?.includes(\n            aPreviousExplicitChild\n          );\n        if (thisChildDoesntExistAnymore) {\n          const childRef: t44ms.Api.RefPrimitive = {\n            [t44ms.Api.RefSymbol]: `${\n              virtualDomNode_fullyFormed.ref[t44ms.Api.RefSymbol]\n            }.${aPreviousExplicitChild}`,\n            _refSymbol: t44ms.Api.RefSymbol,\n          };\n          destroyElement(childRef as unknown as symbol);\n        }\n      }\n    );\n\n    logicalContextController.end_context(reactingPower.logicalContext);\n\n    endStateIndexesContext();\n\n    (window as any)[Service.React44msReactingPowerSymbol] = undefined;\n  };\n\n  const runElementEffects: Service.ServiceClient[\"runElementEffects\"] = (\n    _ref\n  ) => {\n    (window as any)[Service.React44msReactingPowerSymbol] = reactingPower;\n\n    virtualDomController.effects();\n\n    (window as any)[Service.React44msReactingPowerSymbol] = undefined;\n  };\n\n  const destroyElement: Service.ServiceClient[\"destroyElement\"] = (ref) => {\n    virtualDomController.crush_kill_destroy(ref as unknown as t44ms.Api.ref);\n    sourceOfTruth.crushKillDestroy(iAmReact, ref as unknown as t44ms.Api.ref);\n  };\n\n  return [createElement, runElementEffects, destroyElement];\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nconst traverseFreshMost_giveMutatable = (\n  virtualStack: t44ms.Api.ref[],\n  virtualDom?: Service.VirtualDomNode\n) => {\n  const literalCallstack = virtualStack\n    .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n    .flat();\n\n  let traverse = virtualDom;\n  literalCallstack.forEach((literalRef) => {\n    if (literalRef.length > 0) {\n      const next = traverse?.children[literalRef];\n      traverse = next;\n    }\n  });\n\n  return traverse;\n};\nconst traverseMutatingFreshMost = (\n  virtualStack: t44ms.Api.ref[],\n  virtualDom: Service.VirtualDomNode\n) => {\n  const literalCallstack = virtualStack\n    .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n    .flat();\n\n  let virtualDomNode = virtualDom;\n  literalCallstack.forEach((literalRef, index) => {\n    const thisIsland_orParent = virtualDomNode.children[literalRef];\n    if (!thisIsland_orParent) {\n      const ref: t44ms.Api.RefPrimitive = {\n        [t44ms.Api.RefSymbol]: `${literalCallstack\n          .slice(0, index + 1)\n          .join(\".\")}`,\n        _refSymbol: t44ms.Api.RefSymbol,\n      };\n      const virtualDomNode_shouldExist: Service.VirtualDomNode = {\n        children: {},\n        ref,\n        lastExplicitChildren: null,\n        latestExplicitChildren: null,\n      };\n      virtualDomNode.children[literalRef] = virtualDomNode_shouldExist;\n    }\n    virtualDomNode = virtualDomNode.children[literalRef];\n  });\n\n  return virtualDomNode;\n};\nconst deleteNode = (ref: t44ms.Api.ref, virtualDom: Service.VirtualDomNode) => {\n  const literalCallstack = [ref]\n    .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n    .flat();\n\n  let virtualDomNode = virtualDom;\n  literalCallstack.forEach((literalRef, index) => {\n    if (index === literalCallstack.length - 1) {\n      delete virtualDomNode.children[literalRef];\n    } else {\n      virtualDomNode = virtualDomNode.children[literalRef];\n    }\n  });\n\n  return virtualDomNode;\n};\nconst extractFulfillment = (\n  rendered?: Service.DomNode\n): Service.VirtualDomNode[\"latestFulfillment\"] => {\n  let fulfillment: Service.VirtualDomNode[\"latestFulfillment\"] = {};\n  const children = !!rendered?.props?.children\n    ? Array.isArray(rendered.props.children)\n      ? rendered.props.children\n      : [rendered.props.children]\n    : [];\n  children.forEach((child: JSX.Element) => {\n    if (!child) {\n      return;\n    }\n\n    if (child.type === \"fulfill\") {\n      const thisFulfillment: Service.VirtualDomNode[\"latestFulfillment\"] = {\n        [child.props.name]: child.props.handler,\n      };\n      fulfillment = {\n        ...fulfillment,\n        ...thisFulfillment,\n      };\n    }\n  });\n  return fulfillment;\n};\n\nconst extractGatewayNode = (\n  expect: t44ms.Api.Expect,\n  rendered?: Service.DomNode\n): Service.GatewayNode => {\n  type AnyEventHandlerKey_literally = `on${string}`;\n  type Input = {\n    name?: string;\n  } & {\n    [key: AnyEventHandlerKey_literally]: () => void;\n  } & { onChange?: (newValue: any) => void };\n  type Submit = { name?: string } & {\n    onSubmit?: t44ms.Api.form[\"onSubmit\"];\n  };\n  let inputs: Input[] = [];\n  let submits: Submit[] = [];\n  const children = !!rendered?.props?.children\n    ? Array.isArray(rendered.props.children)\n      ? rendered.props.children\n      : [rendered.props.children]\n    : [];\n  [...[rendered], ...children].forEach((child: JSX.Element) => {\n    if (!child) {\n      return;\n    }\n    if (child.type === \"form\") {\n      const thisSubmit: Submit = {\n        name: child.props.name,\n        onSubmit: child.props[\"React44ms_onSubmit\"],\n      };\n      submits = [...submits, ...[thisSubmit]];\n    }\n    if (child.type === \"input\" && child.props[\"React44ms_onChange\"]) {\n      const thisInput: Input = {\n        name: child.props.name,\n        onChange: child.props[\"React44ms_onChange\"],\n      };\n      Object.keys(child.props).forEach((key) => {\n        if (\n          key.startsWith(\"on\") &&\n          key.length > \"on\".length &&\n          child.props[key] instanceof Function\n        ) {\n          thisInput[key as `on${string}`] = child.props[key];\n        }\n      });\n      inputs = [...inputs, ...[thisInput]];\n    }\n    if (child.type === \"output\") {\n    }\n  });\n\n  const findInputTargetedByEvent = (\n    yieldablePort?: t44ms.Api.YieldablePortPrimitive | undefined\n  ) => {\n    let inputTarget;\n\n    if (yieldablePort) {\n      const explicitYieldablePortInput = inputs.find(\n        (input) => input.name === yieldablePort[t44ms.Api.YieldablePortSymbol]\n      );\n      if (explicitYieldablePortInput) {\n        inputTarget = explicitYieldablePortInput;\n      }\n    } else {\n      const firstInputWithoutAName = inputs.find((input) => !input.name);\n      if (firstInputWithoutAName) {\n        inputTarget = firstInputWithoutAName;\n      }\n\n      const firstInput = inputs.length > 0 ? inputs[0] : undefined;\n      if (!inputTarget && firstInput) {\n        inputTarget = firstInput;\n      }\n    }\n\n    return inputTarget;\n  };\n  const handleEvent = (yieldingRef: t44ms.Api.YieldingRef) => {\n    const inputTarget = findInputTargetedByEvent(yieldingRef.yieldablePort);\n    const thisHandlerName_explicit = t44ms.Api.anyYieldableHandlerToValue(\n      yieldingRef.yieldableHandler\n    );\n\n    let thisHandlerName = thisHandlerName_explicit;\n    const thisHasNoHandlerNameExplicitly =\n      !thisHandlerName || thisHandlerName.length < 1;\n    const thereIsValueBeingSent =\n      yieldingRef.yieldedValue !== t44ms.Api.YieldedValueNotFoundSymbol;\n    if (thisHasNoHandlerNameExplicitly && thereIsValueBeingSent) {\n      thisHandlerName = \"onChange\";\n    }\n\n    if (thisHandlerName === \"onChange\") {\n      const thisNodeEventHandler = inputTarget?.onChange;\n      const inputOnChangeEventTarget: t44ms.Api.InputOnChangeEventTarget = {\n        value: yieldingRef.yieldedValue,\n      };\n      const inputOnChangeEvent: t44ms.Api.InputOnChangeEvent = {\n        target: inputOnChangeEventTarget,\n      };\n      thisNodeEventHandler?.(inputOnChangeEvent);\n    } else {\n      const thisNodeEventHandler =\n        inputTarget?.[thisHandlerName as `on${string}`];\n      thisNodeEventHandler?.();\n    }\n  };\n\n  const findSubmitTargetedByEvent = (\n    yieldablePort?: t44ms.Api.YieldablePortPrimitive | undefined\n  ) => {\n    let submitTargets: Submit[] = [];\n\n    if (yieldablePort) {\n      const explicitYieldablePortSubmit = submits.find(\n        (input) => input.name === yieldablePort[t44ms.Api.YieldablePortSymbol]\n      );\n      if (explicitYieldablePortSubmit) {\n        submitTargets = [...submitTargets, ...[explicitYieldablePortSubmit]];\n      }\n    } else {\n      submitTargets = [...submits];\n    }\n\n    return submitTargets;\n  };\n\n  const handleSubmit = (\n    yieldingRef: t44ms.Api.YieldingRef,\n    handleException: (any_exception: unknown, submit_name?: string) => void\n  ) => {\n    const submitTargets = findSubmitTargetedByEvent(yieldingRef.yieldablePort);\n    const submitEvent: t44ms.Api.FormOnSubmitEvent = {\n      expect,\n    };\n    submitTargets.forEach((submitTarget) => {\n      try {\n        submitTarget.onSubmit?.(submitEvent);\n      } catch (anyError) {\n        handleException(anyError, submitTarget.name);\n      }\n    });\n  };\n\n  const domNode: Service.GatewayNode = {\n    handleEvent,\n    handleSubmit,\n  };\n\n  return domNode;\n};\n\nconst extractExplicitChildren = (rendered: JSX.Element) => {\n  let explicitChildren: NonNullable<\n    Service.VirtualDomNode[\"latestExplicitChildren\"]\n  > = [];\n  const children: JSX.Element[] = !!rendered?.props?.children\n    ? Array.isArray(rendered.props.children)\n      ? rendered.props.children\n      : [rendered.props.children]\n    : [];\n  children.forEach((child) => {\n    if (!!child && child.type instanceof Function) {\n      const this_ref = (child as unknown as any).ref;\n      explicitChildren = [...explicitChildren, ...[this_ref]];\n    }\n  });\n  return explicitChildren;\n};\n\nconst renderOnVirtualDom = (\n  expect: t44ms.Api.Expect,\n  rendered: JSX.Element,\n  virtualStack: t44ms.Api.ref[],\n  virtualDom: Service.VirtualDomNode\n) => {\n  const thisVirtualDomNode = traverseFreshMost_giveMutatable(\n    virtualStack,\n    virtualDom\n  )!;\n  thisVirtualDomNode.rendered = rendered;\n  thisVirtualDomNode.gateway = extractGatewayNode(expect, rendered);\n\n  if (thisVirtualDomNode.latestOutputs) {\n    thisVirtualDomNode.lastOutputs = thisVirtualDomNode.latestOutputs;\n    thisVirtualDomNode.latestOutputs = undefined;\n  }\n\n  if (thisVirtualDomNode.latestFulfillment) {\n    thisVirtualDomNode.lastFulfillment = thisVirtualDomNode.latestFulfillment;\n    thisVirtualDomNode.latestFulfillment = undefined;\n  }\n\n  if (thisVirtualDomNode.latestExplicitChildren) {\n    thisVirtualDomNode.lastExplicitChildren =\n      thisVirtualDomNode.latestExplicitChildren;\n    thisVirtualDomNode.latestExplicitChildren = null;\n  }\n\n  const outputs: Service.Output[] = parseDomNode_forOutputs(rendered);\n  thisVirtualDomNode.latestOutputs = outputs;\n\n  thisVirtualDomNode.latestFulfillment = extractFulfillment(rendered);\n\n  thisVirtualDomNode.latestExplicitChildren = extractExplicitChildren(rendered);\n\n  return thisVirtualDomNode;\n};\n\nconst parseDomNode_forOutputs = (domNode?: Service.DomNode | undefined) => {\n  let outputs: Service.Output[] = [];\n  const children = !!domNode?.props?.children\n    ? Array.isArray(domNode.props.children)\n      ? domNode.props.children\n      : [domNode.props.children]\n    : [];\n  children.forEach((child: JSX.Element) => {\n    if (!child) {\n      return;\n    }\n\n    if (child.type === \"output\") {\n      const thisOutput: Service.Output = {\n        name: child.props.name,\n        value: child.props[\"React44ms_value\"],\n      };\n      outputs = [...outputs, ...[thisOutput]];\n    }\n  });\n  return outputs;\n};\nconst renderOnPublicDom = (\n  _serviceController: Service.ServiceController,\n  siphonPublicFinal: ReturnType<Service.FactoryPublicFormState>[\"siphonPublicFinal\"],\n  siphonPublicFulfillmentFinal: ReturnType<Service.FactoryPublicFormState>[\"siphonPublicFulfillmentFinal\"],\n  virtualStack: t44ms.Api.ref[],\n  virtualDomNode:\n    | Service.VirtualDomNode\n    | typeof Service.PublicFormStateStack_CrushKillDestroy\n) => {\n  if (virtualDomNode === Service.PublicFormStateStack_CrushKillDestroy) {\n    siphonPublicFinal(\n      virtualStack,\n      undefined,\n      Service.PublicFormStateStack_CrushKillDestroy\n    );\n    siphonPublicFulfillmentFinal(\n      virtualStack,\n      undefined,\n      Service.PublicFormStateStack_CrushKillDestroy\n    );\n    return;\n  }\n\n  (virtualDomNode.lastOutputs || []).forEach((oldOutput) => {\n    const equivalentOutput = (virtualDomNode.latestOutputs || []).find(\n      (output) => output.name === oldOutput.name\n    );\n    if (!equivalentOutput) {\n      siphonPublicFinal(\n        virtualStack,\n        Service.PublicFormStateStack_CrushKillDestroy,\n        oldOutput.name\n      );\n    }\n  });\n  (virtualDomNode.latestOutputs || []).forEach((output) => {\n    const equivalentOutput = (virtualDomNode.lastOutputs || []).find(\n      (lastOutput) => lastOutput.name === output.name\n    );\n    if (!equivalentOutput || equivalentOutput?.value !== output.value) {\n      siphonPublicFinal(virtualStack, output.value, output.name);\n    }\n  });\n\n  Object.entries(virtualDomNode.lastFulfillment || {}).forEach(\n    (oldFulfillment) => {\n      const [oldName] = oldFulfillment;\n      const equivalentOutput = Object.entries(\n        virtualDomNode.latestFulfillment || {}\n      ).find(([newName]) => newName === oldName);\n      if (!equivalentOutput) {\n        siphonPublicFulfillmentFinal(\n          virtualStack,\n          Service.PublicFormStateStack_CrushKillDestroy,\n          oldName\n        );\n      }\n    }\n  );\n  Object.entries(virtualDomNode.latestFulfillment || {}).forEach(\n    (fulfillment) => {\n      const [name, value] = fulfillment;\n      const equivalentFulfillment = (virtualDomNode.lastFulfillment || {})[\n        name\n      ];\n      if (!equivalentFulfillment || equivalentFulfillment !== value) {\n        siphonPublicFulfillmentFinal(virtualStack, value, name);\n      }\n    }\n  );\n};\n\nexport const ootbDom: Service.FactoryDom = (\n  serviceController,\n  publicFormStateStack,\n  serviceViewModel\n) => {\n  const {\n    publicFormStateImmediate,\n    siphonPublicFinal,\n    siphonPublicFulfillmentFinal,\n  } = publicFormStateStack;\n\n  const expect: t44ms.Api.Expect = <\n    YourExpectedFormDataFromThatLocationRef extends any\n  >(\n    ref: t44ms.Api.ref,\n    defaultValue: YourExpectedFormDataFromThatLocationRef\n  ): YourExpectedFormDataFromThatLocationRef => {\n    const current_literal_value =\n      Service.publicFormAccess<YourExpectedFormDataFromThatLocationRef>(\n        publicFormStateImmediate(),\n        ref\n      );\n\n    const guaranteedValue = current_literal_value || defaultValue;\n\n    return guaranteedValue;\n  };\n\n  let virtualDom: Service.VirtualDomNode | null = null;\n  let living_effects: Service.Work[] = [];\n\n  let virtualStack: t44ms.Api.ref[] = [];\n  const begin_context = (ref?: t44ms.Api.ref) => {\n    virtualStack = [...(ref ? [ref] : []), ...virtualStack];\n    serviceViewModel.work_reconcile_state();\n  };\n  const createElement: Service.VirtualDomController[\"createElement\"] = <\n    YourPropsType extends any\n  >(\n    element_type: t44ms.Api.FunctionComponent<YourPropsType>,\n    props: YourPropsType\n  ) => {\n    if (!virtualDom) {\n      const ref: t44ms.Api.RefPrimitive = {\n        [t44ms.Api.RefSymbol]: `${[].join(\".\")}`,\n        _refSymbol: t44ms.Api.RefSymbol,\n      };\n      virtualDom = {\n        children: {},\n        ref,\n        latestExplicitChildren: null,\n        lastExplicitChildren: null,\n      };\n    }\n\n    const thisVirtualDomNode: Service.VirtualDomNode =\n      traverseMutatingFreshMost(virtualStack, virtualDom);\n    thisVirtualDomNode.type =\n      element_type as unknown as t44ms.Api.FunctionComponent;\n    thisVirtualDomNode.props = props;\n  };\n  const end_context = (rendered: JSX.Element) => {\n    const thisVirtualDomNode_fullyFormed: Service.VirtualDomNode =\n      renderOnVirtualDom(expect, rendered, virtualStack, virtualDom!)!;\n\n    let public_form_state_transitions: Service.Work[] = [];\n    const proxy_siphonPublicFinal: Service.PublicFormStateStack[\"siphonPublicFinal\"] =\n      (virtualStack, value, name) => {\n        const virtualStackCopy = [...virtualStack];\n        const this_state_transition = () => {\n          siphonPublicFinal(virtualStackCopy, value, name);\n        };\n        public_form_state_transitions = [\n          ...public_form_state_transitions,\n          ...[this_state_transition],\n        ];\n      };\n\n    let public_form_fulfillment_transitions: Service.Work[] = [];\n    const proxy_siphonPublicFulfillmentFinal: Service.PublicFormStateStack[\"siphonPublicFulfillmentFinal\"] =\n      (virtualStack, value, name) => {\n        const virtualStackCopy = [...virtualStack];\n        const this_fulfillment_transition = () => {\n          siphonPublicFulfillmentFinal(virtualStackCopy, value, name);\n        };\n        public_form_fulfillment_transitions = [\n          ...public_form_fulfillment_transitions,\n          ...[this_fulfillment_transition],\n        ];\n      };\n\n    renderOnPublicDom(\n      serviceController,\n      proxy_siphonPublicFinal,\n      proxy_siphonPublicFulfillmentFinal,\n      virtualStack,\n      thisVirtualDomNode_fullyFormed\n    );\n\n    const virtualStackCopy = [...virtualStack];\n    const effect_state_transitions__includes_yields: Service.Work = () => {\n      serviceViewModel.work_reconcile_state();\n    };\n    const effect_component_effects: Service.Work = () => {\n      serviceViewModel.work_after_rendering();\n    };\n    const effect_renders_on_the_public_dom: Service.Work = () => {\n      public_form_state_transitions.forEach(\n        (this_public_form_state_transition) => {\n          this_public_form_state_transition();\n        }\n      );\n      if (public_form_state_transitions.length > 0) {\n        const literalCallstack = virtualStackCopy\n          .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n          .flat();\n        const whereAmI: t44ms.Api.RefPrimitive = {\n          [t44ms.Api.RefSymbol]: `${literalCallstack.join(\".\")}`,\n          _refSymbol: t44ms.Api.RefSymbol,\n        };\n        serviceController.public_form_state_ready(whereAmI);\n      }\n\n      public_form_fulfillment_transitions.forEach(\n        (this_public_form_fulfillment_transition) => {\n          this_public_form_fulfillment_transition();\n        }\n      );\n      if (public_form_fulfillment_transitions.length > 0) {\n        const literalCallstack = virtualStackCopy\n          .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n          .flat();\n        const whereAmI: t44ms.Api.RefPrimitive = {\n          [t44ms.Api.RefSymbol]: `${literalCallstack.join(\".\")}`,\n          _refSymbol: t44ms.Api.RefSymbol,\n        };\n        serviceController.public_form_fulfillment_ready(whereAmI);\n      }\n    };\n    living_effects = [\n      ...living_effects,\n      ...[\n        effect_component_effects,\n        effect_state_transitions__includes_yields,\n        effect_renders_on_the_public_dom,\n      ],\n    ];\n\n    virtualStack = virtualStack.slice(1);\n\n    return thisVirtualDomNode_fullyFormed;\n  };\n  const effects = () => {\n    const effects = living_effects;\n    living_effects = [];\n    effects.forEach((this_effect) => {\n      this_effect();\n    });\n  };\n\n  const crush_kill_destroy: Service.VirtualDomController[\"crush_kill_destroy\"] =\n    (ref) => {\n      if (!virtualDom) {\n        return;\n      }\n\n      deleteNode(ref, virtualDom);\n\n      let public_form_state_transitions: Service.Work[] = [];\n      const proxy_siphonPublicFinal: Service.PublicFormStateStack[\"siphonPublicFinal\"] =\n        (virtualStack, value, name) => {\n          const virtualStackCopy = [...virtualStack];\n          const this_state_transition = () => {\n            siphonPublicFinal(virtualStackCopy, value, name);\n          };\n          public_form_state_transitions = [\n            ...public_form_state_transitions,\n            ...[this_state_transition],\n          ];\n        };\n\n      let public_form_fulfillment_transitions: Service.Work[] = [];\n      const proxy_siphonPublicFulfillmentFinal: Service.PublicFormStateStack[\"siphonPublicFulfillmentFinal\"] =\n        (virtualStack, value, name) => {\n          const virtualStackCopy = [...virtualStack];\n          const this_fulfillment_transition = () => {\n            siphonPublicFulfillmentFinal(virtualStackCopy, value, name);\n          };\n          public_form_fulfillment_transitions = [\n            ...public_form_fulfillment_transitions,\n            ...[this_fulfillment_transition],\n          ];\n        };\n\n      renderOnPublicDom(\n        serviceController,\n        proxy_siphonPublicFinal,\n        proxy_siphonPublicFulfillmentFinal,\n        [ref],\n        Service.PublicFormStateStack_CrushKillDestroy\n      );\n      const effect_renders_on_the_public_dom: Service.Work = () => {\n        public_form_state_transitions.forEach(\n          (this_public_form_state_transition) => {\n            this_public_form_state_transition();\n          }\n        );\n        if (public_form_state_transitions.length > 0) {\n          serviceController.public_form_state_ready(ref);\n        }\n\n        public_form_fulfillment_transitions.forEach(\n          (this_public_form_fulfillment_transition) => {\n            this_public_form_fulfillment_transition();\n          }\n        );\n        if (public_form_fulfillment_transitions.length > 0) {\n          serviceController.public_form_fulfillment_ready(ref);\n        }\n      };\n      living_effects = [\n        ...living_effects,\n        ...[effect_renders_on_the_public_dom],\n      ];\n    };\n\n  const explorer: Service.DOMExplorer = (\n    _iAmReact: Service.IAmReact,\n    callstackAdditions?: any[]\n  ): Service.GatewayNode | null => {\n    if (!virtualDom) {\n      return null;\n    }\n\n    const callstack = [...(callstackAdditions ? callstackAdditions : [])];\n\n    const thisVirtualDomNode = traverseFreshMost_giveMutatable(\n      callstack,\n      virtualDom\n    );\n\n    const thisGatewayNode: Service.GatewayNode | undefined =\n      thisVirtualDomNode?.gateway;\n\n    return thisGatewayNode || null;\n  };\n  const exploreRefs = (whereAmILiterally: t44ms.Api.ref) => {\n    if (!virtualDom) {\n      return null;\n    }\n\n    const thisVirtualDomNode: Service.VirtualDomNode | undefined =\n      traverseFreshMost_giveMutatable([whereAmILiterally], virtualDom);\n\n    return thisVirtualDomNode ? thisVirtualDomNode : null;\n  };\n  const giveCurrentRefStack = () => {\n    return virtualStack;\n  };\n\n  const virtualDomController: Service.VirtualDomController = {\n    begin_context,\n    createElement,\n    end_context,\n    effects,\n    crush_kill_destroy,\n  };\n  return { explorer, exploreRefs, virtualDomController, giveCurrentRefStack };\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const ootbEvents: Service.FactoryEvents = (dom, reactingPower) => {\n  const eventHandler: Service.ServiceClient[\"eventHandler\"] = (ref) => {\n    const yieldingRef = t44ms.Api.extractYieldingRef(ref);\n    const referencedNode = reactingPower.dom(\n      null as unknown as Service.IAmReact,\n      yieldingRef.yieldingCallstackAdditions\n    );\n    referencedNode?.handleEvent(yieldingRef);\n  };\n  const submitHandler: Service.ServiceClient[\"submitHandler\"] = (ref) => {\n    const yieldingRef = t44ms.Api.extractYieldingRef(ref);\n    const { reasons_this_form_is_invalid } = handleSubmit(dom, yieldingRef);\n    return { reasons_this_form_is_invalid };\n  };\n\n  return [eventHandler, submitHandler];\n};\n\ntype Submissions = { [key: string]: true };\nconst handleSubmit = (\n  dom: ReturnType<Service.FactoryDom>,\n  starting_from_here: t44ms.Api.YieldingRef,\n  howDeep: number = 0\n): ReturnType<Service.ServiceClient[\"submitHandler\"]> & {\n  submissions: Submissions;\n} => {\n  if (!starting_from_here) {\n    const reasons_this_form_is_invalid = {\n      [t44ms.Api.submit\n        .NO_SUBMIT_FOUND_INVALID_FORM_REASON_KEY]: `Cannot handle submit without a starting point. Please provide a ref.`,\n    };\n    return { reasons_this_form_is_invalid, submissions: {} };\n  }\n\n  const ref: t44ms.Api.RefPrimitive = {\n    [t44ms.Api.RefSymbol]: starting_from_here.yieldingCallstackAdditions\n      .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n      .flat()\n      .join(\".\"),\n    _refSymbol: t44ms.Api.RefSymbol,\n  };\n\n  const here = dom.exploreRefs(ref);\n  if (!here) {\n    const reasons_this_form_is_invalid = {\n      [t44ms.Api.submit\n        .NO_SUBMIT_FOUND_INVALID_FORM_REASON_KEY]: `Cannot handle submit without a starting point. Please provide a ref to something valid.`,\n    };\n    return { reasons_this_form_is_invalid, submissions: {} };\n  }\n\n  let submissions: Submissions = {};\n  const submit: t44ms.Api.Submitter[\"submit\"] = (submission) => {\n    if (!submission) {\n      throw new Error(`Cannot submit an invalid submission!`);\n    }\n    submissions = {\n      ...submissions,\n      ...{\n        [`${ref[t44ms.Api.RefSymbol]}`]: !!submission,\n      },\n    };\n  };\n  const submitter: t44ms.Api.Submitter = {\n    submit,\n  };\n  (window as any)[Service.React44msUseSubmitSymbol] = submitter;\n  let reasons_this_form_is_invalid__local: NonNullable<\n    ReturnType<\n      Service.ServiceClient[\"submitHandler\"]\n    >[\"reasons_this_form_is_invalid\"]\n  > = {};\n  here.gateway?.handleSubmit(\n    starting_from_here,\n    (any_exception, submit_named) => {\n      const this_key = `${ref[t44ms.Api.RefSymbol]}${\n        submit_named ? `.${submit_named}` : \"\"\n      }`;\n      if (any_exception) {\n        reasons_this_form_is_invalid__local[this_key] = `${any_exception}`;\n      } else {\n        reasons_this_form_is_invalid__local[this_key] = `${new Error(\n          \"Unknown error.\"\n        )}`;\n      }\n    }\n  );\n  (window as any)[Service.React44msUseSubmitSymbol] = null;\n\n  Object.entries(here.children).forEach(([refPortion]) => {\n    if (!refPortion || refPortion.trim().length < 1) {\n      return;\n    }\n    const next_position: t44ms.Api.RefPrimitive = {\n      [t44ms.Api.RefSymbol]: `${ref[t44ms.Api.RefSymbol]}.${refPortion}`,\n      _refSymbol: t44ms.Api.RefSymbol,\n    };\n    const next_yielding_ref: t44ms.Api.YieldingRef = {\n      ...starting_from_here,\n      yieldingCallstackAdditions: [...[next_position]],\n    };\n    const {\n      reasons_this_form_is_invalid: rhs__reasons_this_form_is_invalid,\n      submissions: rhs__submissions,\n    } = handleSubmit(dom, next_yielding_ref, howDeep + 1);\n    reasons_this_form_is_invalid__local = {\n      ...reasons_this_form_is_invalid__local,\n      ...rhs__reasons_this_form_is_invalid,\n    };\n    submissions = {\n      ...submissions,\n      ...rhs__submissions,\n    };\n  });\n\n  if (howDeep === 0 && Object.keys(submissions).length < 1) {\n    reasons_this_form_is_invalid__local = {\n      ...reasons_this_form_is_invalid__local,\n      [t44ms.Api.submit\n        .NO_SUBMIT_FOUND_INVALID_FORM_REASON_KEY]: `Nothing submitted yet.`,\n    };\n  }\n\n  let reasons_this_form_is_invalid = null;\n  if (\n    Object.keys(reasons_this_form_is_invalid__local).length > 0 ||\n    !!reasons_this_form_is_invalid__local[\n      t44ms.Api.submit.NO_SUBMIT_FOUND_INVALID_FORM_REASON_KEY\n    ]\n  ) {\n    reasons_this_form_is_invalid = reasons_this_form_is_invalid__local;\n  }\n\n  return { reasons_this_form_is_invalid, submissions };\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const ootbFormRefs: Service.FactoryFormRefs = (publicFormStateStack) => {\n  const { publicFormStateImmediate } = publicFormStateStack;\n\n  const somethingYetToExist = Symbol.for(\"somethingYetToExist\");\n  const form_refs_pretend_object = {};\n  const createProxy = <ProxyingType extends {}>(previousNameStack?: any) => {\n    const nameStack = Array.isArray(previousNameStack)\n      ? previousNameStack\n      : previousNameStack\n      ? [previousNameStack]\n      : [];\n    const form_refs_proxy = new Proxy<ProxyingType>(\n      form_refs_pretend_object as unknown as ProxyingType,\n      {\n        get: (_target: any, name: any) => {\n          if (name === t44ms.Api.RefSymbol) {\n            return `${nameStack.join(\".\")}`;\n          }\n          if (name === \"_refSymbol\") {\n            return t44ms.Api.RefSymbol;\n          }\n          if (name === somethingYetToExist) {\n            return nameStack;\n          }\n          if (name === t44ms.Api.TypedRefSymbol) {\n            const value: t44ms.Api.RefPrimitive = {\n              [t44ms.Api.RefSymbol]: `${nameStack.join(\".\")}`,\n              _refSymbol: t44ms.Api.RefSymbol,\n            };\n            return value;\n          }\n          if (name === t44ms.Api.TypedRefValueSymbol) {\n            return somethingYetToExist;\n          }\n          if (name === \"typedRef\") {\n            const refPrimitive: t44ms.Api.RefPrimitive = {\n              [t44ms.Api.RefSymbol]: `${nameStack.join(\".\")}`,\n              _refSymbol: t44ms.Api.RefSymbol,\n            };\n            const value: t44ms.Api.TypedRef<unknown> = {\n              ...refPrimitive,\n              [t44ms.Api.TypedRefSymbol]: refPrimitive,\n              [t44ms.Api.TypedRefValueSymbol]: somethingYetToExist,\n              _typedRefSymbol: t44ms.Api.TypedRefSymbol,\n            };\n            return value;\n          }\n\n          const myForm =\n            publicFormStateImmediate() || ({} as Service.PublicForm);\n\n          const thisFullName = [...nameStack, ...[name]];\n\n          let value: any;\n          thisFullName.forEach((name, index) => {\n            value =\n              value && value !== somethingYetToExist && name in value\n                ? (value as any)[name]\n                : index === 0\n                ? name in myForm\n                  ? (myForm as any)[name]\n                  : somethingYetToExist\n                : somethingYetToExist;\n          });\n\n          if (typeof value === \"object\" || value === somethingYetToExist) {\n            return createProxy<ProxyingType>(thisFullName);\n          } else {\n            const value: t44ms.Api.RefPrimitive = {\n              [t44ms.Api.RefSymbol]: `${thisFullName.join(\".\")}`,\n              _refSymbol: t44ms.Api.RefSymbol,\n            };\n            return value;\n          }\n        },\n      }\n    ) as any;\n    return form_refs_proxy as ProxyingType;\n  };\n  const formRefs = createProxy();\n\n  const formRefsIsland = (ref: t44ms.Api.ref | undefined) => {\n    const literalCallstack = [ref || formRefs]\n      .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n      .flat();\n\n    let island = formRefs;\n    literalCallstack.forEach((name) => {\n      if (name && name.length > 0) {\n        island = (island as any | undefined)?.[name];\n      }\n    });\n\n    return island;\n  };\n\n  return [formRefs, formRefsIsland];\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const ootbLogicalContext: Service.FactoryLogicalContext = () => {\n  const logicalContext: Service.ReactingPower_LogicalContext = {\n    callStack: [],\n    elementStack: [],\n  };\n\n  interface Counter {\n    value: number;\n  }\n  let counterStack_filo: Counter[] = [];\n  const topOfTheCounterStack = () => {\n    return counterStack_filo.length > 0 ? counterStack_filo[0] : undefined;\n  };\n  const incrementCounter = () => {\n    const top = topOfTheCounterStack();\n    if (top) {\n      top.value = top.value + 1;\n      return top.value;\n    }\n    return -1;\n  };\n  const begin_context = (\n    logicalContext: Service.ReactingPower_LogicalContext,\n    ref?: any\n  ) => {\n    const thisCounted = incrementCounter();\n\n    counterStack_filo = [\n      ...[\n        {\n          value: -1,\n        },\n      ],\n      ...counterStack_filo,\n    ];\n\n    logicalContext.callStack = [\n      ...(ref ? [ref] : []),\n      ...logicalContext.callStack,\n    ];\n\n    const bespokeImplicitRef: t44ms.Api.RefPrimitive = {\n      [t44ms.Api.RefSymbol]: `__ImplicitReferenceToElement_${thisCounted}`,\n      _refSymbol: t44ms.Api.RefSymbol,\n    };\n    logicalContext.elementStack = [\n      ...(ref ? [ref] : [bespokeImplicitRef]),\n      ...logicalContext.elementStack,\n    ];\n  };\n  const end_context = (\n    logicalContext: Service.ReactingPower_LogicalContext\n  ) => {\n    logicalContext.elementStack = logicalContext.elementStack.slice(1);\n    logicalContext.callStack = logicalContext.callStack.slice(1);\n  };\n  const logicalContextController: Service.LogicalContextController = {\n    begin_context,\n    end_context,\n  };\n  return [logicalContext, logicalContextController];\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const ootbPublicFormState: Service.FactoryPublicFormState = () => {\n  let publicFormState: Service.PublicForm | null = null;\n  let publicFulfillment: Service.PublicForm | null = null;\n\n  const siphonPublicFinal: ReturnType<Service.FactoryPublicFormState>[\"siphonPublicFinal\"] =\n    (virtualStack, value, name) => {\n      if (!publicFormState) {\n        publicFormState = {};\n      }\n\n      const literalCallstack = virtualStack\n        .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n        .flat();\n\n      let domNode = publicFormState;\n      let parentDomNode: Service.PublicForm | null = null;\n      let thisDomNodeKeyOnTheParentNode: string | null = null;\n      const lastReferenceIndex = literalCallstack.length - 1;\n      literalCallstack.forEach((ref, index) => {\n        if (index === lastReferenceIndex) {\n          if (name === Service.PublicFormStateStack_CrushKillDestroy) {\n          } else if (name) {\n            if (ref.length > 0) {\n              if (!domNode[ref]) {\n                domNode[ref] = {};\n              }\n\n              domNode[ref][name] = value;\n            } else {\n              if (parentDomNode) {\n                parentDomNode[thisDomNodeKeyOnTheParentNode!][name] = value;\n              } else {\n                publicFormState![name] = value;\n              }\n            }\n          } else {\n            if (ref.length > 0) {\n              if (typeof domNode[ref] === \"object\") {\n                domNode[ref] = {\n                  ...domNode[ref],\n                  ...value,\n                };\n              } else {\n                domNode[ref] = value;\n              }\n            } else {\n              if (parentDomNode) {\n                parentDomNode[thisDomNodeKeyOnTheParentNode!] = {\n                  ...domNode,\n                  ...value,\n                };\n              } else {\n                publicFormState = { ...publicFormState, ...value };\n              }\n            }\n          }\n        } else {\n          if (ref.length > 0) {\n            const thisIsland_orParent = domNode[ref];\n            if (!thisIsland_orParent) {\n              const domNode_shouldExist: Service.PublicForm = {};\n              domNode[ref] = domNode_shouldExist;\n            }\n          } else {\n            if (parentDomNode) {\n              parentDomNode[thisDomNodeKeyOnTheParentNode!] = {};\n            }\n          }\n        }\n\n        if (ref.length > 0) {\n          parentDomNode = domNode;\n          thisDomNodeKeyOnTheParentNode = ref;\n          domNode = domNode[ref];\n        } else {\n          domNode = publicFormState!;\n        }\n      });\n\n      if (!!name && value === Service.PublicFormStateStack_CrushKillDestroy) {\n        if (parentDomNode) {\n          delete parentDomNode[thisDomNodeKeyOnTheParentNode!][name];\n        } else {\n          publicFormState = null;\n        }\n      }\n      if (name === Service.PublicFormStateStack_CrushKillDestroy) {\n        if (parentDomNode) {\n          delete parentDomNode[thisDomNodeKeyOnTheParentNode!];\n        } else {\n          publicFormState = null;\n        }\n      }\n    };\n\n  const siphonPublicFulfillmentFinal: ReturnType<Service.FactoryPublicFormState>[\"siphonPublicFulfillmentFinal\"] =\n    (virtualStack, value, name) => {\n      if (!publicFulfillment) {\n        publicFulfillment = {};\n      }\n\n      const literalCallstack = virtualStack\n        .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n        .flat();\n\n      let domNode = publicFulfillment;\n      let parentDomNode: Service.PublicForm | null = null;\n      let thisDomNodeKeyOnTheParentNode: string | null = null;\n      const lastReferenceIndex = literalCallstack.length - 1;\n      literalCallstack.forEach((ref, index) => {\n        if (index === lastReferenceIndex) {\n          if (name === Service.PublicFormStateStack_CrushKillDestroy) {\n          } else if (name) {\n            if (ref.length > 0) {\n              if (!domNode[ref]) {\n                domNode[ref] = {};\n              }\n              domNode[ref][name] = value;\n            } else {\n              if (parentDomNode) {\n                parentDomNode[thisDomNodeKeyOnTheParentNode!][name] = value;\n              } else {\n                publicFormState![name] = value;\n              }\n            }\n          } else {\n            if (ref.length > 0) {\n              if (typeof domNode[ref] === \"object\") {\n                domNode[ref] = {\n                  ...domNode[ref],\n                  ...value,\n                };\n              } else {\n                domNode[ref] = value;\n              }\n            } else {\n              if (parentDomNode) {\n                parentDomNode[thisDomNodeKeyOnTheParentNode!] = {\n                  ...domNode,\n                  ...value,\n                };\n              } else {\n                publicFormState = { ...publicFormState, ...value };\n              }\n            }\n          }\n        } else {\n          if (ref.length > 0) {\n            const thisIsland_orParent = domNode[ref];\n            if (!thisIsland_orParent) {\n              const domNode_shouldExist: Service.PublicForm = {};\n              domNode[ref] = domNode_shouldExist;\n            }\n          } else {\n            if (parentDomNode) {\n              parentDomNode[thisDomNodeKeyOnTheParentNode!] = {};\n            }\n          }\n        }\n\n        if (ref.length > 0) {\n          parentDomNode = domNode;\n          thisDomNodeKeyOnTheParentNode = ref;\n          domNode = domNode[ref];\n        } else {\n          domNode = publicFulfillment!;\n        }\n      });\n\n      if (!!name && value === Service.PublicFormStateStack_CrushKillDestroy) {\n        if (parentDomNode) {\n          delete parentDomNode[thisDomNodeKeyOnTheParentNode!][name];\n        } else {\n          publicFulfillment = null;\n        }\n      }\n      if (name === Service.PublicFormStateStack_CrushKillDestroy) {\n        if (parentDomNode) {\n          delete parentDomNode[thisDomNodeKeyOnTheParentNode!];\n        } else {\n          publicFulfillment = null;\n        }\n      }\n    };\n\n  return {\n    publicFormStateImmediate: () => publicFormState,\n    siphonPublicFinal,\n    siphonPublicFulfillmentFinal,\n    publicFulfillmentImmediate: () => publicFulfillment,\n  };\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nconst useState_sourceOfTruth_symbol = Symbol.for(\n  \"react-44ms/service/ootb-t44ms.Api.Reactionary/useState_sourceOfTruth_symbol\"\n);\nexport const useState: Service.IAmAReactionaryComponent<\"useState\"> = (\n  iAmReact: Service.IAmReact\n) => {\n  return <YourType extends unknown>(initialState: YourType) => {\n    const reactingPower = Service.useReactingPower();\n\n    const sourceOfTruthCartridge = reactingPower.sourceOfTruthEjectButton(\n      iAmReact,\n      useState_sourceOfTruth_symbol\n    );\n    const sourceOfTruth =\n      reactingPower.sourceOfTruthFromEjectedCartridge<YourType>(\n        iAmReact,\n        sourceOfTruthCartridge\n      );\n\n    const immediateSetter = (nextValue: YourType) => {\n      sourceOfTruth.value = nextValue;\n\n      const referenceToHere: t44ms.Api.RefPrimitive = {\n        [t44ms.Api.RefSymbol]: `${sourceOfTruthCartridge.callstack.join(\".\")}`,\n        _refSymbol: t44ms.Api.RefSymbol,\n      };\n      iAmReact[\"HEY!LİSTEN!\"](referenceToHere);\n    };\n\n    if (sourceOfTruth.fresh) {\n      immediateSetter(initialState);\n    }\n\n    const referenceToHere: t44ms.Api.RefPrimitive = {\n      [t44ms.Api.RefSymbol]: `${sourceOfTruthCartridge.callstack.join(\".\")}`,\n      _refSymbol: t44ms.Api.RefSymbol,\n    };\n    const setState = (nextValue: YourType) => {\n      iAmReact.add_work(referenceToHere, () => {\n        immediateSetter(nextValue);\n      });\n    };\n    return [sourceOfTruth.value!, setState];\n  };\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nconst useMemo_sourceOfTruth_symbol = Symbol.for(\n  \"react-44ms/service/ootb-t44ms.Api.Reactionary/useMemo_sourceOfTruth_symbol\"\n);\n\ntype Memoized<YourType> = {\n  memoizedValue: YourType;\n  memoizedDependencies: any[];\n};\n\nexport const useMemo: Service.IAmAReactionaryComponent<\"useMemo\"> = (\n  iAmReact: Service.IAmReact\n) => {\n  return <YourType extends unknown>(\n    computer: () => YourType,\n    dependencies: any[]\n  ): YourType => {\n    const reactingPower = Service.useReactingPower();\n\n    const sourceOfTruthCartridge = reactingPower.sourceOfTruthEjectButton(\n      iAmReact,\n      useMemo_sourceOfTruth_symbol\n    );\n    const sourceOfTruth = reactingPower.sourceOfTruthFromEjectedCartridge<\n      Memoized<YourType>\n    >(iAmReact, sourceOfTruthCartridge);\n\n    const haveAnyOfMyDependenciesChanged =\n      t44ms.Always.dependenciesVsDependencies(\n        sourceOfTruth.value?.memoizedDependencies,\n        dependencies\n      );\n\n    if (\n      sourceOfTruth.fresh ||\n      haveAnyOfMyDependenciesChanged ===\n        t44ms.Always.NoTheDependenciesAreNotTheSame\n    ) {\n      const computedValue = computer();\n      const memo: Memoized<YourType> = {\n        memoizedValue: computedValue,\n        memoizedDependencies: dependencies,\n      };\n      sourceOfTruth.value = memo;\n\n      const referenceToHere: t44ms.Api.RefPrimitive = {\n        [t44ms.Api.RefSymbol]: `${sourceOfTruthCartridge.callstack.join(\".\")}`,\n        _refSymbol: t44ms.Api.RefSymbol,\n      };\n      iAmReact[\"HEY!LİSTEN!\"](referenceToHere);\n    }\n\n    return sourceOfTruth.value!.memoizedValue;\n  };\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nconst useEffect_sourceOfTruth_symbol = Symbol.for(\n  \"react-44ms/service/ootb-reactionary/useEffect_sourceOfTruth_symbol\"\n);\n\ntype Effect = {\n  afterlife?: () => void;\n  memoizedDependencies: any[];\n};\n\nexport const useEffect: Service.IAmAReactionaryComponent<\"useEffect\"> = (\n  iAmReact: Service.IAmReact\n) => {\n  const useEffect: t44ms.Api.Reactionary[\"useEffect\"] = (\n    computer,\n    dependencies,\n    configuration\n  ) => {\n    const reactingPower = Service.useReactingPower();\n\n    const sourceOfTruthCartridge = reactingPower.sourceOfTruthEjectButton(\n      iAmReact,\n      useEffect_sourceOfTruth_symbol\n    );\n    const sourceOfTruth =\n      reactingPower.sourceOfTruthFromEjectedCartridge<Effect>(\n        iAmReact,\n        sourceOfTruthCartridge\n      );\n\n    const haveAnyOfMyDependenciesChanged =\n      t44ms.Always.dependenciesVsDependencies(\n        sourceOfTruth.value?.memoizedDependencies,\n        dependencies\n      );\n\n    if (\n      sourceOfTruth.fresh ||\n      haveAnyOfMyDependenciesChanged ===\n        t44ms.Always.NoTheDependenciesAreNotTheSame\n    ) {\n      const this_afterlife = sourceOfTruth.value?.afterlife;\n      const this_effect_work = () => {\n        this_afterlife?.();\n        if (configuration?.debounce) {\n          const timeoutId = setTimeout(() => {\n            const newAfterlife = computer();\n            if (newAfterlife) {\n              const latestSourceOfTruth =\n                reactingPower.sourceOfTruthFromEjectedCartridge<Effect>(\n                  iAmReact,\n                  sourceOfTruthCartridge\n                );\n              const latestSourceOfTruthValue = latestSourceOfTruth.value;\n              if (latestSourceOfTruthValue) {\n                latestSourceOfTruthValue.afterlife = newAfterlife;\n              }\n            } else {\n              const latestSourceOfTruth =\n                reactingPower.sourceOfTruthFromEjectedCartridge<Effect>(\n                  iAmReact,\n                  sourceOfTruthCartridge\n                );\n              const latestSourceOfTruthValue = latestSourceOfTruth.value;\n              if (latestSourceOfTruthValue) {\n                delete latestSourceOfTruthValue.afterlife;\n              }\n            }\n          }, configuration.debounce);\n          const effect: Effect = {\n            memoizedDependencies: dependencies,\n            afterlife: () => {\n              clearTimeout(timeoutId);\n            },\n          };\n          sourceOfTruth.value = effect;\n        } else {\n          const afterlife = computer();\n          const effect: Effect = {\n            memoizedDependencies: dependencies,\n          };\n          if (afterlife) {\n            effect.afterlife = afterlife;\n          }\n          sourceOfTruth.value = effect;\n        }\n      };\n\n      const referenceToHere: t44ms.Api.RefPrimitive = {\n        [t44ms.Api.RefSymbol]: `${sourceOfTruthCartridge.callstack.join(\".\")}`,\n        _refSymbol: t44ms.Api.RefSymbol,\n      };\n      iAmReact.add_work(\n        referenceToHere,\n        this_effect_work,\n        Service.WorkDescription.after_rendering\n      );\n    }\n  };\n\n  iAmReact.sourceOfTruthOnCrushKillDestroy<Effect>(\n    useEffect_sourceOfTruth_symbol,\n    (sourceOfTruthRawCollection) => {\n      sourceOfTruthRawCollection.forEach((anEffectToDestroy) => {\n        anEffectToDestroy.afterlife?.();\n      });\n    }\n  );\n\n  return useEffect;\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nconst useCallback_sourceOfTruth_symbol = Symbol.for(\n  \"react-44ms/service/ootb-t44ms.Api.Reactionary/useCallback_sourceOfTruth_symbol\"\n);\n\ntype MemoizedCallback<YourCallbackType> = {\n  memoizedProxy: YourCallbackType;\n  memoizedValue: YourCallbackType;\n  memoizedDependencies: any[];\n};\n\nexport const useCallback: Service.IAmAReactionaryComponent<\"useCallback\"> = (\n  iAmReact: Service.IAmReact\n) => {\n  return <YourCallbackType extends Function>(\n    callback: YourCallbackType,\n    dependencies: any[]\n  ): YourCallbackType => {\n    const reactingPower = Service.useReactingPower();\n\n    const sourceOfTruthCartridge = reactingPower.sourceOfTruthEjectButton(\n      iAmReact,\n      useCallback_sourceOfTruth_symbol\n    );\n    const sourceOfTruth = reactingPower.sourceOfTruthFromEjectedCartridge<\n      MemoizedCallback<YourCallbackType>\n    >(iAmReact, sourceOfTruthCartridge);\n\n    const haveAnyOfMyDependenciesChanged =\n      t44ms.Always.dependenciesVsDependencies(\n        sourceOfTruth.value?.memoizedDependencies,\n        dependencies\n      );\n\n    if (\n      sourceOfTruth.fresh ||\n      haveAnyOfMyDependenciesChanged ===\n        t44ms.Always.NoTheDependenciesAreNotTheSame\n    ) {\n      const handler = {\n        apply: function (_target: Function, _thisArg: any, argumentsList: any) {\n          const yourCallbacksLatestSourceOfTruth =\n            reactingPower.sourceOfTruthFromEjectedCartridge<\n              MemoizedCallback<YourCallbackType>\n            >(iAmReact, sourceOfTruthCartridge);\n          const yourCallback =\n            yourCallbacksLatestSourceOfTruth.value?.memoizedValue;\n          return yourCallback?.apply(null, argumentsList);\n        },\n      };\n      const callbackGetsProxied = new Proxy<YourCallbackType>(\n        callback,\n        handler\n      );\n\n      const memoizedCallback: MemoizedCallback<YourCallbackType> = {\n        memoizedValue: callback,\n        memoizedProxy: callbackGetsProxied,\n        memoizedDependencies: dependencies,\n      };\n      sourceOfTruth.value = memoizedCallback;\n\n      const referenceToHere: t44ms.Api.RefPrimitive = {\n        [t44ms.Api.RefSymbol]: `${sourceOfTruthCartridge.callstack.join(\".\")}`,\n        _refSymbol: t44ms.Api.RefSymbol,\n      };\n      iAmReact[\"HEY!LİSTEN!\"](referenceToHere);\n    }\n\n    return sourceOfTruth.value?.memoizedProxy!;\n  };\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nconst useRef_sourceOfTruth_symbol = Symbol.for(\n  \"react-44ms/service/ootb-t44ms.Api.Reactionary/useRef_sourceOfTruth_symbol\"\n);\nexport const useRef: Service.IAmAReactionaryComponent<\"useRef\"> = (\n  iAmReact: Service.IAmReact\n) => {\n  return <YourType extends any>(initialState: YourType) => {\n    const reactingPower = Service.useReactingPower();\n\n    const sourceOfTruthCartridge = reactingPower.sourceOfTruthEjectButton(\n      iAmReact,\n      useRef_sourceOfTruth_symbol\n    );\n\n    const sourceOfTruth =\n      reactingPower.sourceOfTruthFromEjectedCartridge<YourType>(\n        iAmReact,\n        sourceOfTruthCartridge\n      );\n    if (sourceOfTruth.fresh) {\n      sourceOfTruth.value = initialState;\n    }\n\n    const refdValue = new Proxy<t44ms.Api.RefdValue<YourType>>(\n      {} as unknown as any,\n      {\n        get: (_target: any, name: any) => {\n          if (name === \"current\") {\n            return sourceOfTruth.value;\n          }\n        },\n        set: (_target: any, property: string | symbol, newValue: any) => {\n          if (property === \"current\") {\n            sourceOfTruth.value = newValue;\n          }\n          return true;\n        },\n      }\n    );\n\n    return refdValue;\n  };\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nimport * as OOTBREACTIONARY from \"typescript-44ms-ootb-reactionary\";\n\nexport const ootbService: Service.FactoryService = (\n  formRefStack,\n  sourceOfTruthStack,\n  { work_required_here }\n) => {\n  const [formRefs, formRefsIsland] = formRefStack;\n\n  let state = {};\n  let isAnythingAnyDifferent = false;\n  const sourceOfTruthPrimitiveExplorer: Service.SourceOfTruthPrimitiveExplorer =\n    () => {\n      return state;\n    };\n  const heyListen = () => {\n    isAnythingAnyDifferent = true;\n  };\n\n  let work_for_state: Service.Work[] = [];\n  let work_for_after_rendering: Service.Work[] = [];\n  const add_work: Service.IAmReact[\"add_work\"] = (\n    ref: t44ms.Api.ref,\n    my_buffered_callback: Service.Work,\n    work_description: Service.WorkDescription = Service.WorkDescription.state\n  ) => {\n    switch (work_description) {\n      case Service.WorkDescription.state:\n        work_for_state = [...work_for_state, ...[my_buffered_callback]];\n        work_required_here(ref);\n        break;\n      case Service.WorkDescription.after_rendering:\n        work_for_after_rendering = [\n          ...work_for_after_rendering,\n\n          ...[my_buffered_callback],\n        ];\n        break;\n      default:\n        break;\n    }\n  };\n\n  const iAmReact: Service.IAmReact = {\n    add_work,\n    [\"what!?\"]: sourceOfTruthPrimitiveExplorer,\n    [\"HEY!LİSTEN!\"]: heyListen,\n\n    formRefs,\n    formRefsIsland,\n\n    sourceOfTruthOnCrushKillDestroy:\n      sourceOfTruthStack.sourceOfTruthOnCrushKillDestroy,\n  };\n\n  const useFormRefs: t44ms.Api.Reactionary[\"useFormRefs\"] =\n    OOTBREACTIONARY.useFormRefs(iAmReact);\n  const useState: t44ms.Api.Reactionary[\"useState\"] =\n    OOTBREACTIONARY.useState(iAmReact);\n  const useRef: t44ms.Api.Reactionary[\"useRef\"] =\n    OOTBREACTIONARY.useRef(iAmReact);\n  const useMemo: t44ms.Api.Reactionary[\"useMemo\"] =\n    OOTBREACTIONARY.useMemo(iAmReact);\n  const useCallback: t44ms.Api.Reactionary[\"useCallback\"] =\n    OOTBREACTIONARY.useCallback(iAmReact);\n  const useEffect: t44ms.Api.Reactionary[\"useEffect\"] =\n    OOTBREACTIONARY.useEffect(iAmReact);\n  const Yield: t44ms.Api.Reactionary[\"Yield\"] = OOTBREACTIONARY.Yield(iAmReact);\n\n  const Reactionary: t44ms.Api.Reactionary = {\n    useFormRefs,\n    useState,\n    useRef,\n    useMemo,\n    useCallback,\n    useEffect,\n    Yield,\n  };\n\n  const work_reconcile_state: Service.Service[\"ViewModel\"][\"work_reconcile_state\"] =\n    () => {\n      const this_work = work_for_state;\n      work_for_state = [];\n      this_work.forEach((buffered_callback) => {\n        buffered_callback();\n      });\n    };\n  const work_after_rendering: Service.Service[\"ViewModel\"][\"work_after_rendering\"] =\n    () => {\n      const this_work = work_for_after_rendering;\n      work_for_after_rendering = [];\n      this_work.forEach((effect) => {\n        effect();\n      });\n    };\n\n  const top_level_state_is_A_special_memoish_callback_ = () => {\n    if (isAnythingAnyDifferent) {\n      // TECHNICALLY A DIFFERENT FORM NOW AS FAR AS ANY MEMOISH ARE CONCERNED\n      state = {\n        ...state,\n      };\n    }\n    return state;\n  };\n  const view_model: Service.Service[\"ViewModel\"] = {\n    work_reconcile_state,\n    work_after_rendering,\n    nowish: top_level_state_is_A_special_memoish_callback_,\n    [\"NEVEERRRRRRRRRRRRRRR!\"]: state,\n    iAmReact,\n  };\n  const ootbService: Service.Service = {\n    Reactionary: Reactionary,\n    ViewModel: view_model,\n  };\n  return ootbService;\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const useFormRefs: Service.IAmAReactionaryComponent<\"useFormRefs\"> = (\n  iAmReact: Service.IAmReact\n) => {\n  return <YourType extends unknown>(parent: t44ms.Api.ref) => {\n    return iAmReact.formRefsIsland(parent) as unknown as YourType;\n  };\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const Yield: Service.IAmAReactionaryComponent<\"Yield\"> = (\n  iAmReact: Service.IAmReact\n) => {\n  const Yield: t44ms.Api.Reactionary[\"Yield\"] = (ref) => {\n    const reactingPower = Service.useReactingPower();\n\n    const yieldingRef = t44ms.Api.extractYieldingRef(ref);\n\n    const referenceToHere: t44ms.Api.RefPrimitive = {\n      [t44ms.Api.RefSymbol]: `${yieldingRef.yieldingCallstackAdditions\n        .map((refPrimitive) => {\n          return refPrimitive[t44ms.Api.RefSymbol];\n        })\n        .join(\".\")}`,\n      _refSymbol: t44ms.Api.RefSymbol,\n    };\n    iAmReact.add_work(\n      referenceToHere,\n      () => {\n        const yieldableLogic = reactingPower.dom(\n          iAmReact,\n          yieldingRef.yieldingCallstackAdditions\n        );\n        yieldableLogic?.handleEvent(yieldingRef);\n      },\n      Service.WorkDescription.state\n    );\n  };\n  return Yield;\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\ninterface Employee {\n  subscriber: Service.Work;\n  whereAmI?: t44ms.Api.ref;\n}\n\nexport const ootbServiceController: Service.FactoryServiceController = (\n  publicFormState,\n  formRefStack\n) => {\n  const [formRefs] = formRefStack;\n\n  let employees: Employee[] = [];\n  const employee: Service.ServiceClient[\"employee\"] = (\n    subscriber: Service.Work,\n    whereAmI?: t44ms.Api.ref\n  ) => {\n    const thisSubscriber: Employee = {\n      subscriber,\n      whereAmI,\n    };\n    employees = [...employees, ...[thisSubscriber]];\n\n    const unsubscribing = () => {\n      employees = employees.filter(\n        (subscriber) => subscriber !== thisSubscriber\n      );\n    };\n    const considerations: Service.ServiceClientExplorerConsiderations = {\n      unsubscribing,\n    };\n    return considerations;\n  };\n  const work_required_here_forAnEmployee: Service.ServiceController[\"work_required_here\"] =\n    (ref_lhs) => {\n      interface Match {\n        subscriber: Employee;\n        howMuchOfAMatch: number;\n      }\n      let matches: Match[] = [];\n      const ref_lhs_components = ref_lhs[t44ms.Api.RefSymbol].split(\".\");\n      employees.forEach((subscriber) => {\n        const { whereAmI: ref_rhs } = subscriber;\n        const ref_rhs_components = (ref_rhs || (formRefs as t44ms.Api.ref))[\n          t44ms.Api.RefSymbol\n        ].split(\".\");\n\n        let matchScore = 0;\n        let hasTheChainBeenBroken = false;\n        ref_lhs_components.forEach((ref_lhs_atom) => {\n          if (hasTheChainBeenBroken) return;\n          const ref_rhs_atom = ref_rhs_components.shift();\n          if (ref_lhs_atom === \"\" || ref_rhs_atom === \"\") {\n            const areTheseBothRootAndTheSame =\n              ref_lhs_atom === \"\" && ref_rhs_atom === \"\";\n            if (!areTheseBothRootAndTheSame) {\n              hasTheChainBeenBroken = true;\n              return;\n            }\n          } else if (ref_lhs_atom !== ref_rhs_atom) {\n            hasTheChainBeenBroken = true;\n            return;\n          }\n          matchScore = matchScore + 1;\n        });\n\n        if (matchScore > 0) {\n          const match: Match = {\n            subscriber,\n            howMuchOfAMatch: matchScore,\n          };\n          matches = [...matches, match];\n        }\n      });\n\n      const sortedMatches = matches.sort((a, b) => {\n        return b.howMuchOfAMatch - a.howMuchOfAMatch;\n      });\n\n      const mostSpecificMatch = sortedMatches[0];\n      if (!mostSpecificMatch) {\n        return;\n      }\n      const allTheSpecificMatches = sortedMatches.filter(\n        (match) => match.howMuchOfAMatch === mostSpecificMatch.howMuchOfAMatch\n      );\n      allTheSpecificMatches.forEach((theMatch) => {\n        theMatch.subscriber.subscriber();\n      });\n    };\n\n  let employeesWhoProduce: Employee[] = [];\n  const employMeAsAProducer: Service.ServiceClient[\"employMeAsAProducer\"] = (\n    subscriber: Service.Work,\n    whereAmI?: t44ms.Api.ref\n  ) => {\n    const thisSubscriber: Employee = {\n      subscriber,\n      whereAmI,\n    };\n    employeesWhoProduce = [...employeesWhoProduce, ...[thisSubscriber]];\n\n    const unsubscribing = () => {\n      employeesWhoProduce = employeesWhoProduce.filter(\n        (subscriber) => subscriber !== thisSubscriber\n      );\n    };\n    const considerations: Service.ServiceClientExplorerConsiderations = {\n      unsubscribing,\n    };\n    return considerations;\n  };\n  const work_required_here_forAnEmployeeWhoProduces: Service.ServiceController[\"work_required_here\"] =\n    (ref_lhs) => {\n      interface Match {\n        subscriber: Employee;\n        howMuchOfAMatch: number;\n      }\n      let matches: Match[] = [];\n      const ref_lhs_components = ref_lhs[t44ms.Api.RefSymbol].split(\".\");\n      employeesWhoProduce.forEach((subscriber) => {\n        const { whereAmI: ref_rhs } = subscriber;\n        const ref_rhs_components = (ref_rhs || (formRefs as t44ms.Api.ref))[\n          t44ms.Api.RefSymbol\n        ].split(\".\");\n\n        let matchScore = 0;\n        let hasTheChainBeenBroken = false;\n        ref_lhs_components.forEach((ref_lhs_atom) => {\n          if (hasTheChainBeenBroken) return;\n          const ref_rhs_atom = ref_rhs_components.shift();\n          if (ref_lhs_atom === \"\" || ref_rhs_atom === \"\") {\n            const areTheseBothRootAndTheSame =\n              ref_lhs_atom === \"\" && ref_rhs_atom === \"\";\n            if (!areTheseBothRootAndTheSame) {\n              hasTheChainBeenBroken = true;\n              return;\n            }\n          } else if (ref_lhs_atom !== ref_rhs_atom) {\n            hasTheChainBeenBroken = true;\n            return;\n          }\n          matchScore = matchScore + 1;\n        });\n\n        if (matchScore > 0) {\n          const match: Match = {\n            subscriber,\n            howMuchOfAMatch: matchScore,\n          };\n          matches = [...matches, match];\n        }\n      });\n\n      const sortedMatches = matches.sort((a, b) => {\n        return b.howMuchOfAMatch - a.howMuchOfAMatch;\n      });\n\n      const mostSpecificMatch = sortedMatches[0];\n      if (!mostSpecificMatch) {\n        return;\n      }\n      const allTheSpecificMatches = sortedMatches.filter(\n        (match) => match.howMuchOfAMatch === mostSpecificMatch.howMuchOfAMatch\n      );\n      allTheSpecificMatches.forEach((theMatch) => {\n        theMatch.subscriber.subscriber();\n      });\n    };\n\n  interface ExplorerSubscriber<\n    YourFormStateDescribingInterfaceType extends any\n  > {\n    subscriber: (latest: YourFormStateDescribingInterfaceType | null) => void;\n    whereAmI?: t44ms.Api.ref;\n  }\n  let explorerSubscribers: ExplorerSubscriber<any>[] = [];\n  const explore: Service.ServiceClient[\"explore\"] = <\n    YourFormStateDescribingInterfaceType extends any\n  >(\n    subscriber: (latest: YourFormStateDescribingInterfaceType | null) => void,\n    whereAmI?: t44ms.Api.ref\n  ): Service.ServiceClientExplorerConsiderations => {\n    const thisSubscriber: ExplorerSubscriber<YourFormStateDescribingInterfaceType> =\n      {\n        subscriber,\n        whereAmI,\n      };\n    explorerSubscribers = [...explorerSubscribers, ...[thisSubscriber]];\n\n    public_form_state_ready(whereAmI || (formRefs as t44ms.Api.ref));\n\n    const unsubscribing = () => {\n      explorerSubscribers = explorerSubscribers.filter(\n        (subscriber) => subscriber !== thisSubscriber\n      );\n    };\n    const considerations: Service.ServiceClientExplorerConsiderations = {\n      unsubscribing,\n    };\n    return considerations;\n  };\n\n  interface ExploreFulfillmentSubscriber<\n    YourFormStateDescribingInterfaceType extends any\n  > {\n    subscriber: (latest: YourFormStateDescribingInterfaceType | null) => void;\n    whereAmI?: t44ms.Api.ref;\n  }\n  let exploreFulfillmentSubscribers: ExploreFulfillmentSubscriber<any>[] = [];\n  const exploreFulfillment: Service.ServiceClient[\"exploreFulfillment\"] = <\n    YourExpectedControllerInterfaceThatLivesAtThatRef extends any\n  >(\n    subscriber: (\n      latest: YourExpectedControllerInterfaceThatLivesAtThatRef | null\n    ) => void,\n    whereAmI?: t44ms.Api.ref\n  ): Service.ServiceClientExplorerConsiderations => {\n    const thisSubscriberOnFulfillment: ExploreFulfillmentSubscriber<YourExpectedControllerInterfaceThatLivesAtThatRef> =\n      {\n        subscriber,\n        whereAmI,\n      };\n    exploreFulfillmentSubscribers = [\n      ...exploreFulfillmentSubscribers,\n      ...[thisSubscriberOnFulfillment],\n    ];\n\n    public_form_fulfillment_ready(whereAmI || (formRefs as t44ms.Api.ref));\n\n    const unsubscribing = () => {\n      exploreFulfillmentSubscribers = exploreFulfillmentSubscribers.filter(\n        (subscriber) => subscriber !== thisSubscriberOnFulfillment\n      );\n    };\n    const considerations: Service.ServiceClientExplorerConsiderations = {\n      unsubscribing,\n    };\n    return considerations;\n  };\n\n  const publicFulfillmentIslandNow = <\n    YourExpectedControllerInterfaceThatLivesAtThatRef extends any\n  >(\n    ref: t44ms.Api.ref\n  ): YourExpectedControllerInterfaceThatLivesAtThatRef | null => {\n    const literalCallstack = ref[t44ms.Api.RefSymbol].split(\".\");\n    let node = publicFormState.publicFulfillmentImmediate();\n    literalCallstack.forEach((name) => {\n      if (name && name.length > 0) {\n        node = node?.[name];\n      }\n    });\n    return node as YourExpectedControllerInterfaceThatLivesAtThatRef | null;\n  };\n\n  const work_required_here: Service.ServiceController[\"work_required_here\"] = (\n    ref_lhs\n  ) => {\n    work_required_here_forAnEmployee(ref_lhs);\n    work_required_here_forAnEmployeeWhoProduces(ref_lhs);\n  };\n  const public_form_state_ready: Service.ServiceController[\"public_form_state_ready\"] =\n    (ref_lhs) => {\n      interface Match {\n        subscriber: ExplorerSubscriber<any>;\n        howMuchOfAMatch: number;\n      }\n      let matches: Match[] = [];\n      const ref_lhs_components = ref_lhs[t44ms.Api.RefSymbol].split(\".\");\n      explorerSubscribers.forEach((subscriber) => {\n        const { whereAmI: ref_rhs } = subscriber;\n        const ref_rhs_components = (ref_rhs || (formRefs as t44ms.Api.ref))[\n          t44ms.Api.RefSymbol\n        ].split(\".\");\n\n        let matchScore = 0;\n        let hasTheChainBeenBroken = false;\n        ref_lhs_components.forEach((ref_lhs_atom) => {\n          if (hasTheChainBeenBroken) return;\n          const ref_rhs_atom = ref_rhs_components.shift();\n\n          const ref_lhs_atom__isRoot = ref_lhs_atom.length < 1;\n          const ref_rhs_atom__isRoot = (ref_rhs_atom?.length || 0) < 1;\n          if (ref_lhs_atom__isRoot || ref_rhs_atom__isRoot) {\n            const areTheseBothTheRootAndTheSame =\n              ref_lhs_atom__isRoot && ref_rhs_atom__isRoot;\n            if (!areTheseBothTheRootAndTheSame) {\n              hasTheChainBeenBroken = true;\n              return;\n            }\n          } else {\n            if (ref_lhs_atom !== ref_rhs_atom) {\n              hasTheChainBeenBroken = true;\n              return;\n            }\n          }\n\n          matchScore = matchScore + 1;\n        });\n\n        if (matchScore > 0) {\n          const match: Match = {\n            subscriber,\n            howMuchOfAMatch: matchScore,\n          };\n          matches = [...matches, match];\n        }\n      });\n\n      const sortedMatches = matches.sort((a, b) => {\n        return b.howMuchOfAMatch - a.howMuchOfAMatch;\n      });\n\n      const mostSpecificMatch = sortedMatches[0];\n      if (!mostSpecificMatch) {\n        return;\n      }\n      const allTheSpecificMatches = sortedMatches.filter(\n        (match) => match.howMuchOfAMatch === mostSpecificMatch.howMuchOfAMatch\n      );\n      allTheSpecificMatches.forEach((theMatch) => {\n        const yourFormState = Service.publicFormAccess(\n          publicFormState.publicFormStateImmediate(),\n          theMatch.subscriber.whereAmI || (formRefs as t44ms.Api.ref)\n        );\n        theMatch.subscriber.subscriber(yourFormState);\n      });\n    };\n  const public_form_fulfillment_ready: Service.ServiceController[\"public_form_fulfillment_ready\"] =\n    (ref_lhs) => {\n      interface Match {\n        subscriber: ExploreFulfillmentSubscriber<any>;\n        howMuchOfAMatch: number;\n      }\n      let matches: Match[] = [];\n      const ref_lhs_components = ref_lhs[t44ms.Api.RefSymbol].split(\".\");\n      exploreFulfillmentSubscribers.forEach((subscriber) => {\n        const { whereAmI: ref_rhs } = subscriber;\n        const ref_rhs_components = (ref_rhs || (formRefs as t44ms.Api.ref))[\n          t44ms.Api.RefSymbol\n        ].split(\".\");\n\n        let matchScore = 0;\n        let hasTheChainBeenBroken = false;\n        ref_lhs_components.forEach((ref_lhs_atom) => {\n          if (hasTheChainBeenBroken) return;\n          const ref_rhs_atom = ref_rhs_components.shift();\n\n          const ref_lhs_atom__isRoot = ref_lhs_atom.length < 1;\n          const ref_rhs_atom__isRoot = (ref_rhs_atom?.length || 0) < 1;\n          if (ref_lhs_atom__isRoot || ref_rhs_atom__isRoot) {\n            const areTheseBothTheRootAndTheSame =\n              ref_lhs_atom__isRoot && ref_rhs_atom__isRoot;\n            if (!areTheseBothTheRootAndTheSame) {\n              hasTheChainBeenBroken = true;\n              return;\n            }\n          } else {\n            if (ref_lhs_atom !== ref_rhs_atom) {\n              hasTheChainBeenBroken = true;\n              return;\n            }\n          }\n\n          matchScore = matchScore + 1;\n        });\n\n        if (matchScore > 0) {\n          const match: Match = {\n            subscriber,\n            howMuchOfAMatch: matchScore,\n          };\n          matches = [...matches, match];\n        }\n      });\n\n      const sortedMatches = matches.sort((a, b) => {\n        return b.howMuchOfAMatch - a.howMuchOfAMatch;\n      });\n\n      const mostSpecificMatch = sortedMatches[0];\n      if (!mostSpecificMatch) {\n        return;\n      }\n      const allTheSpecificMatches = sortedMatches.filter(\n        (match) => match.howMuchOfAMatch === mostSpecificMatch.howMuchOfAMatch\n      );\n      allTheSpecificMatches.forEach((theMatch) => {\n        const yourFormState = publicFulfillmentIslandNow(\n          theMatch.subscriber.whereAmI || (formRefs as t44ms.Api.ref)\n        );\n        theMatch.subscriber.subscriber(yourFormState);\n      });\n    };\n\n  const serviceController: Service.ServiceController = {\n    work_required_here,\n    public_form_state_ready,\n    public_form_fulfillment_ready,\n  };\n\n  return [\n    serviceController,\n    explore,\n    exploreFulfillment,\n    employee,\n    employMeAsAProducer,\n  ];\n};\n","import * as t44ms from \"typescript-44ms\";\nimport * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const ootbSourceOfTruthStack: Service.FactorySourceOfTruth = (\n  stateIndexingStack\n) => {\n  interface AnySourceOfTruthIsland_PerReactionaryState {\n    fifo_state_stack?: any[];\n  }\n  interface AnySourceOfTruthIsland {\n    [key: symbol]: AnySourceOfTruthIsland_PerReactionaryState;\n  }\n  const island = (\n    iAmReact: Service.IAmReact,\n    sourceOfTruthEjectedCartridge: Omit<\n      Service.SourceOfTruthEjectedCartridge,\n      \"stateIndex\"\n    >\n  ) => {\n    const { callstack: literalCallstack } = sourceOfTruthEjectedCartridge;\n\n    let sourceOfTruthPrimitive = iAmReact[\"what!?\"]<AnySourceOfTruthIsland>();\n\n    let traverse_mutating: Service.SourceOfTruthPrimitive<AnySourceOfTruthIsland> =\n      sourceOfTruthPrimitive;\n    literalCallstack.forEach((literalRef, index) => {\n      const thisIsland_orParent = traverse_mutating[literalRef];\n      if (!thisIsland_orParent) {\n        const island: AnySourceOfTruthIsland = {};\n        traverse_mutating[literalRef] = island;\n\n        const referenceToHere: t44ms.Api.RefPrimitive = {\n          [t44ms.Api.RefSymbol]: `${literalCallstack\n            .slice(0, index + 1)\n            .join(\".\")}`,\n          _refSymbol: t44ms.Api.RefSymbol,\n        };\n        iAmReact[\"HEY!LİSTEN!\"](referenceToHere);\n      }\n      traverse_mutating = traverse_mutating[\n        literalRef\n      ] as unknown as Service.SourceOfTruthPrimitive<AnySourceOfTruthIsland>;\n    });\n\n    const thisSourceOfTruthIsland: AnySourceOfTruthIsland =\n      traverse_mutating as unknown as AnySourceOfTruthIsland;\n\n    return thisSourceOfTruthIsland;\n  };\n\n  let crushKillDestroyGracefulExits: [symbol, (sourceOfTruth: any) => void][] =\n    [];\n  const sourceOfTruthOnCrushKillDestroy: ReturnType<Service.FactorySourceOfTruth>[\"sourceOfTruthOnCrushKillDestroy\"] =\n    <YourSourceOfTruthType>(\n      sourceOfTruthId: Symbol,\n      consumer: (\n        sourceOfTruthRawCollection: Service.SourceOfTruthRawCollection<YourSourceOfTruthType>\n      ) => void\n    ) => {\n      const this_graceful_exit: [symbol, (sourceOfTruth: any) => void] = [\n        sourceOfTruthId.valueOf(),\n        consumer as (sourceOfTruth: any) => void,\n      ];\n      crushKillDestroyGracefulExits = [\n        ...crushKillDestroyGracefulExits,\n        ...[this_graceful_exit],\n      ];\n    };\n  const pushDestroy = (thisSourceOfTruthIsland: any) => {\n    crushKillDestroyGracefulExits.forEach((gracefulExit) => {\n      const [symbolValueOf, consumer] = gracefulExit;\n      consumer(thisSourceOfTruthIsland[symbolValueOf]?.fifo_state_stack || []);\n    });\n  };\n\n  const crushKillDestroy: ReturnType<Service.FactorySourceOfTruth>[\"crushKillDestroy\"] =\n    (iAmReact, ref) => {\n      let sourceOfTruthPrimitive = iAmReact[\"what!?\"]<AnySourceOfTruthIsland>();\n\n      let traverse_mutating: Service.SourceOfTruthPrimitive<AnySourceOfTruthIsland> =\n        sourceOfTruthPrimitive;\n      const literalCallstack = t44ms.Api.anyRefishToStringValue(ref).split(\".\");\n      literalCallstack.forEach((literalRef, index) => {\n        if (!traverse_mutating) {\n          return;\n        }\n        if (index === literalCallstack.length - 1) {\n          if ((traverse_mutating as unknown as {}).hasOwnProperty(literalRef)) {\n            const thisNode = traverse_mutating[literalRef];\n            Object.keys(thisNode).forEach((key) => {\n              const nestedElementRef: t44ms.Api.RefPrimitive = {\n                [t44ms.Api.RefSymbol]: `${[...literalCallstack, ...[key]].join(\n                  \".\"\n                )}`,\n                _refSymbol: t44ms.Api.RefSymbol,\n              };\n              crushKillDestroy(iAmReact, nestedElementRef);\n            });\n            pushDestroy(traverse_mutating[literalRef]);\n            delete traverse_mutating[literalRef];\n          }\n        }\n        traverse_mutating = traverse_mutating[\n          literalRef\n        ] as unknown as Service.SourceOfTruthPrimitive<AnySourceOfTruthIsland>;\n      });\n    };\n\n  const sourceOfTruthFromEjectedCartridge: Service.ReactingPower[\"sourceOfTruthFromEjectedCartridge\"] =\n    <YourSourceOfTruthType>(\n      iAmReact: Service.IAmReact,\n      sourceOfTruthEjectedCartridge: Service.SourceOfTruthEjectedCartridge\n    ) => {\n      const { thisStateIndex, thisStateSymbol } = sourceOfTruthEjectedCartridge;\n      const sourceOfTruthProxy = new Proxy<\n        Service.SourceOfTruth<YourSourceOfTruthType>\n      >({} as unknown as any, {\n        get: (_target: any, name: any) => {\n          const thisSourceOfTruthIsland = island(\n            iAmReact,\n            sourceOfTruthEjectedCartridge\n          );\n          if (name === \"value\") {\n            return thisSourceOfTruthIsland[thisStateSymbol.valueOf()]\n              ?.fifo_state_stack?.[thisStateIndex];\n          }\n          if (name === \"fresh\") {\n            return (\n              (thisSourceOfTruthIsland[thisStateSymbol.valueOf()]\n                ?.fifo_state_stack?.length || 0) === thisStateIndex\n            );\n          }\n        },\n        set: (_target: any, property: string | symbol, newValue: any) => {\n          const thisSourceOfTruthIsland = island(\n            iAmReact,\n            sourceOfTruthEjectedCartridge\n          );\n\n          if (property === \"value\") {\n            if (!thisSourceOfTruthIsland[thisStateSymbol.valueOf()]) {\n              const reactionaryState: AnySourceOfTruthIsland_PerReactionaryState =\n                {\n                  fifo_state_stack: [],\n                };\n              thisSourceOfTruthIsland[thisStateSymbol.valueOf()] =\n                reactionaryState;\n            }\n            thisSourceOfTruthIsland[\n              thisStateSymbol.valueOf()\n            ].fifo_state_stack![thisStateIndex] = newValue;\n          }\n\n          return true;\n        },\n      });\n      return sourceOfTruthProxy;\n    };\n\n  const sourceOfTruthEjectButton: Service.ReactingPower[\"sourceOfTruthEjectButton\"] =\n    (\n      _iAmReact: Service.IAmReact,\n      sourceOfTruthId: Symbol,\n      callstackAdditions?: any[]\n    ) => {\n      const reactingPower = Service.useReactingPower();\n\n      const virtualStack = [\n        ...(callstackAdditions ? callstackAdditions : []),\n        ...reactingPower.logicalContext.elementStack,\n      ];\n\n      const literalCallstack = virtualStack\n        .map((ref) => t44ms.Api.anyRefishToStringValue(ref).split(\".\"))\n        .flat();\n\n      const thisStateIndex = stateIndexingStack.stateCounter(\n        sourceOfTruthId.valueOf()\n      );\n      const cartridge: Service.SourceOfTruthEjectedCartridge = {\n        callstack: literalCallstack,\n        thisStateIndex,\n        thisStateSymbol: sourceOfTruthId,\n      };\n\n      return cartridge;\n    };\n\n  const sourceOfTruth: Service.ReactingPower[\"sourceOfTruth\"] = <\n    YourSourceOfTruthType\n  >(\n    iAmReact: Service.IAmReact,\n    sourceOfTruthId: Symbol,\n    callstackAdditions?: any[]\n  ) => {\n    const cartridge = sourceOfTruthEjectButton(\n      iAmReact,\n      sourceOfTruthId,\n      callstackAdditions\n    );\n    return sourceOfTruthFromEjectedCartridge<YourSourceOfTruthType>(\n      iAmReact,\n      cartridge\n    );\n  };\n\n  return {\n    sourceOfTruth,\n    sourceOfTruthEjectButton,\n    sourceOfTruthFromEjectedCartridge,\n    crushKillDestroy,\n    sourceOfTruthOnCrushKillDestroy,\n  };\n};\n","import * as Service from \"typescript-44ms-reactionary-template-method\";\n\nexport const ootbStateIndexingStack: Service.FactoryStateIndexing = () => {\n  let stateIndexes_filo: Record<symbol, number>[] = [];\n  const beginStateIndexesContext = () => {\n    stateIndexes_filo = [...[{}], ...stateIndexes_filo];\n  };\n  const endStateIndexesContext = () => {\n    stateIndexes_filo = stateIndexes_filo.slice(1);\n  };\n  const topOfTheStack = () => stateIndexes_filo[0];\n  const stateCounter = (ref: Symbol) => {\n    const thisContext = topOfTheStack();\n    if (\n      thisContext[ref.valueOf()] === undefined ||\n      thisContext[ref.valueOf()] === null\n    ) {\n      thisContext[ref.valueOf()] = -1;\n    }\n    thisContext[ref.valueOf()] = thisContext[ref.valueOf()] + 1;\n    return thisContext[ref.valueOf()];\n  };\n\n  return {\n    beginStateIndexesContext,\n    endStateIndexesContext,\n    stateCounter,\n  };\n};\n","import { FinalizedReactionaryBlueprint } from \"typescript-44ms-reactionary-template-method\";\nimport { ootbCreateElement } from \"typescript-44ms-ootb-create-element\";\nimport { ootbDom } from \"typescript-44ms-ootb-dom\";\nimport { ootbEvents } from \"typescript-44ms-ootb-events\";\nimport { ootbFormRefs } from \"typescript-44ms-ootb-form-refs\";\nimport { ootbLogicalContext } from \"typescript-44ms-ootb-logical-context\";\nimport { ootbPublicFormState } from \"typescript-44ms-ootb-public-form-state\";\nimport { ootbService } from \"typescript-44ms-ootb-service\";\nimport { ootbServiceController } from \"typescript-44ms-ootb-service-controller\";\nimport { ootbSourceOfTruthStack } from \"typescript-44ms-ootb-source-of-truth\";\nimport { ootbStateIndexingStack } from \"typescript-44ms-ootb-state-indexing\";\n\nexport const ootb = (): FinalizedReactionaryBlueprint => ({\n  publicFormState: ootbPublicFormState,\n  refs: ootbFormRefs,\n  serviceController: ootbServiceController,\n  service: ootbService,\n  stateIndexing: ootbStateIndexingStack,\n  sourceOfTruth: ootbSourceOfTruthStack,\n  dom: ootbDom,\n  logicalContext: ootbLogicalContext,\n  createElement: ootbCreateElement,\n  events: ootbEvents,\n});\n"],"names":["UseServiceSymbol","Symbol","for","YieldablePortSymbol","RefSymbol","isThatARef","that","_refSymbol","anyRefishToStringValue","refish","YieldableHandlerSymbol","isThatAYieldableHandler","input","_yieldableHandler","YieldedValueSymbol","YieldedValueNotFoundSymbol","isThatAYieldedValuePrimitive","_yieldedValueSymbol","extractYieldingRef","refThatCanHaveYielding","yieldablePort","yieldableHandler","yieldingCallstackAdditions","yieldedValue","Array","isArray","lastValueInTheRef","filter","refComponent","_yieldablePort","length","slice","submit","submission","useSubmit","window","NO_SUBMIT_FOUND_INVALID_FORM_REASON_KEY","TypedRefSymbol","TypedRefValueSymbol","NoTheDependenciesAreNotTheSame","dependenciesVsDependencies","lhs","rhs","some","index","Object","is","PublicFormStateStack_CrushKillDestroy","publicFormAccess","publicFormState","ref","literalCallstack","t44ms","split","node","forEach","name","React44msReactingPowerSymbol","useReactingPower","React44msUseSubmitSymbol","WorkDescription","ootbCreateElement","stateIndexingStack","virtualDomController","logicalContextController","reactingPower","sourceOfTruth","iAmReact","beginStateIndexesContext","endStateIndexesContext","createElement","type","props","begin_context","logicalContext","Service","rendered","end_context","children","child","Function","childProps","childRef","childType","fullyQualifiedRef","virtualDomNode_fullyFormed","lastExplicitChildren","aPreviousExplicitChild","latestExplicitChildren","includes","destroyElement","undefined","crush_kill_destroy","crushKillDestroy","_ref","effects","traverseFreshMost_giveMutatable","virtualStack","virtualDom","map","flat","traverse","literalRef","next","extractGatewayNode","expect","inputs","submits","thisSubmit","onSubmit","thisInput","onChange","keys","key","startsWith","handleEvent","yieldingRef","inputTarget","explicitYieldablePortInput","find","firstInputWithoutAName","firstInput","findInputTargetedByEvent","thisHandlerName","thisHasNoHandlerNameExplicitly","thereIsValueBeingSent","thisNodeEventHandler","target","value","handleSubmit","handleException","submitTargets","explicitYieldablePortSubmit","findSubmitTargetedByEvent","submitEvent","submitTarget","anyError","renderOnVirtualDom","thisVirtualDomNode","gateway","latestOutputs","lastOutputs","latestFulfillment","lastFulfillment","outputs","parseDomNode_forOutputs","fulfillment","thisFulfillment","handler","extractFulfillment","explicitChildren","this_ref","extractExplicitChildren","domNode","thisOutput","renderOnPublicDom","_serviceController","siphonPublicFinal","siphonPublicFulfillmentFinal","virtualDomNode","oldOutput","output","equivalentOutput","lastOutput","entries","oldFulfillment","oldName","newName","equivalentFulfillment","ootbDom","serviceController","publicFormStateStack","serviceViewModel","publicFormStateImmediate","defaultValue","living_effects","work_reconcile_state","element_type","join","virtualDomNode_shouldExist","traverseMutatingFreshMost","thisVirtualDomNode_fullyFormed","public_form_state_transitions","public_form_fulfillment_transitions","virtualStackCopy","work_after_rendering","this_public_form_state_transition","whereAmI","public_form_state_ready","this_public_form_fulfillment_transition","public_form_fulfillment_ready","this_effect","deleteNode","explorer","_iAmReact","callstackAdditions","callstack","thisGatewayNode","exploreRefs","whereAmILiterally","giveCurrentRefStack","ootbEvents","dom","reasons_this_form_is_invalid","starting_from_here","howDeep","submissions","here","submitter","Error","reasons_this_form_is_invalid__local","any_exception","submit_named","this_key","refPortion","trim","next_position","next_yielding_ref","rhs__reasons_this_form_is_invalid","rhs__submissions","ootbFormRefs","somethingYetToExist","form_refs_pretend_object","createProxy","previousNameStack","nameStack","Proxy","get","_target","refPrimitive","_typedRefSymbol","myForm","thisFullName","formRefs","island","ootbLogicalContext","counterStack_filo","incrementCounter","top","thisCounted","callStack","bespokeImplicitRef","elementStack","ootbPublicFormState","publicFulfillment","parentDomNode","thisDomNodeKeyOnTheParentNode","lastReferenceIndex","domNode_shouldExist","publicFulfillmentImmediate","useState_sourceOfTruth_symbol","useMemo_sourceOfTruth_symbol","useEffect_sourceOfTruth_symbol","useCallback_sourceOfTruth_symbol","useRef_sourceOfTruth_symbol","ootbService","formRefStack","sourceOfTruthStack","work_required_here","formRefsIsland","state","isAnythingAnyDifferent","work_for_state","work_for_after_rendering","add_work","my_buffered_callback","work_description","after_rendering","sourceOfTruthOnCrushKillDestroy","useFormRefs","parent","OOTBREACTIONARY","useState","initialState","sourceOfTruthCartridge","sourceOfTruthEjectButton","sourceOfTruthFromEjectedCartridge","immediateSetter","nextValue","referenceToHere","fresh","useRef","set","property","newValue","useMemo","computer","dependencies","haveAnyOfMyDependenciesChanged","memoizedDependencies","memo","memoizedValue","useCallback","callback","memoizedCallback","memoizedProxy","apply","_thisArg","argumentsList","yourCallback","useEffect","sourceOfTruthRawCollection","anEffectToDestroy","afterlife","configuration","this_afterlife","this_effect_work","debounce","timeoutId","setTimeout","newAfterlife","latestSourceOfTruthValue","effect","clearTimeout","Yield","Reactionary","ViewModel","this_work","buffered_callback","nowish","ootbServiceController","employees","employeesWhoProduce","explorerSubscribers","exploreFulfillmentSubscribers","ref_lhs","matches","ref_lhs_components","subscriber","ref_rhs","ref_rhs_components","matchScore","hasTheChainBeenBroken","ref_lhs_atom","ref_rhs_atom","shift","ref_lhs_atom__isRoot","ref_rhs_atom__isRoot","match","howMuchOfAMatch","sortedMatches","sort","a","b","mostSpecificMatch","theMatch","yourFormState","publicFulfillmentIslandNow","work_required_here_forAnEmployee","work_required_here_forAnEmployeeWhoProduces","thisSubscriber","considerations","unsubscribing","thisSubscriberOnFulfillment","ootbSourceOfTruthStack","sourceOfTruthEjectedCartridge","traverse_mutating","crushKillDestroyGracefulExits","hasOwnProperty","thisNode","nestedElementRef","thisSourceOfTruthIsland","gracefulExit","symbolValueOf","consumer","fifo_state_stack","thisStateIndex","thisStateSymbol","valueOf","reactionaryState","sourceOfTruthId","stateCounter","cartridge","this_graceful_exit","ootbStateIndexingStack","stateIndexes_filo","thisContext","refs","service","stateIndexing","events"],"mappings":"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"}